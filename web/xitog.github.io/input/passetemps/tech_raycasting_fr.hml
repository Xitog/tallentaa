!const TITLE=Raycasting
!const LANG=fr
!const ICON=https://xitog.github.io/dgx/img/favicon.ico
!require https://xitog.github.io/dgx/css/simplex.bootstrap.css
!require https://xitog.github.io/dgx/css/palatino.css
!require https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js
!require https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js

!css code {color: #006FDD; border: 1px solid rgb(225, 228, 229); padding-left: 3px; padding-right: 5px;}

{{#main .container}}

!include menu.html

{{#content-div}}

# Sommaire

* [Introduction->#]
* [Historique->#]
* [Technique->#]
* [Références->#]

# Introduction

**Le [raycasting->https://en.wikipedia.org/wiki/Ray_casting] (lancer de rayons) est une technique de rendu dans les jeux vidéo pour, à partir d'une carte en 2D, afficher en temps réel un environnement qui à l'apparence d'une 3D rudimentaire** [1]. Le principal avantage de cette technique est d'être rapide et abordable en termes de calcul temps réel pour les ordinateurs du début des années 90. Cette technique est également appelée parfois « [2.5D->https://en.wikipedia.org/wiki/2.5D] » pour la différencier des premiers moteurs de rendu en vraie 3D comme le moteur de @@Quake 1@@, appelé aussi Id Tech 1, mais cette appellation recouvre également d'autres techniques de représentation d'un environnement 3D en 2D comme les [projections axonométriques->https://en.wikipedia.org/wiki/Axonometric_projection] dont la [perspective isométrique->https://en.wikipedia.org/wiki/Isometric_video_game_graphics].

Il ne faut pas confondre ''raycasting'' et ''raytracing''. Le raytracing est une autre technique de rendu qui est beaucoup plus coûteuse en temps de calcul et simule le parcours des rayons de lumière de différentes sources pour éclairer la scène en essayant d'atteindre une qualité photoréaliste. Depuis la fin 2019, la puissance des cartes graphiques est telle que certains proposent du raytracing en temps réel.

Notons enfin que si le raycasting est rapide sur les résolutions de l'écran de l'époque, 320x200, 640x400 ou 640x480, ses performances sont très mauvaises sur nos grandes résolutions modernes et il vaut mieux passer par des techniques plus modernes comme les API 3D OpenGL, Vulkan ou DirectX.

# Historique

# Technique

# Références

[1] : Lode's Computer Graphics Tutorial

{{#content-div}}

{{end}}
{{end}}
