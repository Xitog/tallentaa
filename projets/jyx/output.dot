digraph graphname {
    init -> init [label=" "];
    init -> number [label="<digit>"];
    init -> identifier [label="<alpha>"];
    init -> string [label="\""];
    init -> operator [label="+"];
    init -> operator [label="-"];
    init -> operator [label="*"];
    init -> operator [label="/"];
    init -> operator [label="%"];
    init -> operator [label=">"];
    init -> operator [label="<"];
    init -> operator [label="."];
    init -> operator [label="="];
    init -> integer_hexa [label="0x"];
    init -> integer_hexa [label="0X"];
    init -> integer_octal [label="0c"];
    init -> integer_octal [label="0C"];
    init -> integer_binary [label="0b"];
    init -> integer_binary [label="0B"];
    number -> number [label="<digit>"];
    number -> operator [label="+"];
    number -> operator [label="-"];
    number -> operator [label="*"];
    number -> operator [label="/"];
    number -> operator [label="%"];
    number -> float [label=".<digit>"];
    number -> operator [label=".<alpha>"];
    number -> init [label=" "];
    integer_binary -> integer_binary [label="['0', '1']"];
    integer_binary -> init [label=" "];
    integer_octal -> integer_octal [label="0"];
    integer_octal -> integer_octal [label="1"];
    integer_octal -> integer_octal [label="2"];
    integer_octal -> integer_octal [label="3"];
    integer_octal -> integer_octal [label="4"];
    integer_octal -> integer_octal [label="5"];
    integer_octal -> integer_octal [label="6"];
    integer_octal -> integer_octal [label="7"];
    integer_octal -> init [label=" "];
    integer_hexa -> integer_hexa [label="<digit>"];
    integer_hexa -> integer_hexa [label="a"];
    integer_hexa -> integer_hexa [label="A"];
    integer_hexa -> integer_hexa [label="b"];
    integer_hexa -> integer_hexa [label="B"];
    integer_hexa -> integer_hexa [label="c"];
    integer_hexa -> integer_hexa [label="C"];
    integer_hexa -> integer_hexa [label="d"];
    integer_hexa -> integer_hexa [label="D"];
    integer_hexa -> integer_hexa [label="e"];
    integer_hexa -> integer_hexa [label="E"];
    integer_hexa -> integer_hexa [label="f"];
    integer_hexa -> integer_hexa [label="F"];
    integer_hexa -> init [label=" "];
    float -> float [label="<digit>"];
    float -> operator [label="+"];
    float -> operator [label="-"];
    float -> operator [label="*"];
    float -> operator [label="/"];
    float -> operator [label="%"];
    float -> init [label=" "];
    identifier -> identifier [label="<alpha>"];
    identifier -> operator [label="+"];
    identifier -> operator [label="-"];
    identifier -> operator [label="*"];
    identifier -> operator [label="/"];
    identifier -> operator [label="%"];
    identifier -> init [label=" "];
    operator -> init [label="+"];
    operator -> init [label="-"];
    operator -> init [label="*"];
    operator -> init [label="**"];
    operator -> init [label="/"];
    operator -> init [label="//"];
    operator -> init [label="%"];
    operator -> init [label=">>"];
    operator -> init [label="<<"];
    operator -> init [label="."];
    operator -> init [label="="];
    operator -> init [label="+="];
    operator -> init [label="-="];
    operator -> init [label="*="];
    operator -> init [label="**="];
    operator -> init [label="/="];
    operator -> init [label="//="];
    operator -> init [label="%="];
    operator -> init [label="<"];
    operator -> init [label=">"];
    operator -> init [label="!="];
    operator -> init [label="<="];
    operator -> init [label=">="];
    operator -> init [label=" "];
}
