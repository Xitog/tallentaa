
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xf1R\r\xda\x8b?\xa5\xd0\x91\n\xb0\x15\x08[\xe3\x97'
    
_lr_action_items = {'DO':([8,15,17,27,28,31,39,42,45,62,66,68,87,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,135,],[-72,-69,-75,-73,-74,-71,-70,-65,88,-60,-57,-58,-64,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,151,]),'DIV_AFF':([23,],[57,]),'RETURN':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[2,-4,-3,2,-5,2,2,-2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'RIGHT_CB':([8,15,17,24,27,28,31,39,42,61,62,64,66,68,87,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,137,138,],[-72,-69,-75,62,-73,-74,-71,-70,-65,-62,-60,105,-57,-58,-64,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,-63,-61,]),'MIN':([0,2,4,5,7,8,11,14,15,17,23,25,27,28,29,31,35,36,37,38,39,40,42,44,45,46,47,49,51,53,54,55,56,57,58,59,60,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,131,133,135,137,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[29,29,29,29,29,-72,-4,-3,-69,-75,-70,29,-73,-74,29,-71,29,29,29,75,-70,75,-65,75,75,75,-5,29,29,29,29,29,29,29,29,29,29,-60,75,-57,75,-58,-2,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-64,29,29,29,29,29,75,75,75,75,75,75,75,75,29,-59,29,-68,-47,75,75,75,75,-42,-45,75,75,-41,75,75,-44,-43,75,-46,75,29,29,29,29,29,75,75,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'REQUIRE':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[3,-4,-3,3,-5,3,3,-2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'IN':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,50,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,81,-70,81,-65,81,81,81,94,-60,81,-57,81,-58,-64,81,81,81,81,81,81,81,81,-59,-68,-47,81,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,81,-46,81,81,81,]),'THEN':([8,15,17,27,28,31,39,42,46,62,65,66,68,87,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[-72,-69,-75,-73,-74,-71,-70,-65,90,-60,107,-57,-58,-64,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,]),'LEFT_SB':([0,2,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[4,4,4,4,4,-4,-3,4,4,4,4,4,-5,4,4,4,4,4,4,4,4,4,4,-2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[5,-4,-3,5,-5,5,5,-2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'MOD_AFF':([23,],[58,]),'MUL':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,82,-70,82,-65,82,82,82,-60,82,-57,82,-58,-64,82,82,82,82,82,82,82,82,-59,-68,-47,82,82,82,82,82,-45,82,82,82,82,82,-44,-43,82,-46,82,82,82,]),'END':([1,2,6,8,10,11,14,15,17,19,21,23,26,27,28,30,31,32,33,34,38,39,40,41,42,47,52,62,66,68,69,87,93,95,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,128,129,134,136,139,140,141,142,144,146,149,150,153,155,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,],[-6,-30,-11,-72,-9,-4,-3,-69,-75,-12,-14,-70,-13,-73,-74,-7,-71,-27,-8,-28,-10,-70,-29,-31,-65,-5,-32,-60,-57,-58,-2,-64,134,136,-40,-38,-35,-36,-37,-39,-33,-34,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,142,144,146,-82,-76,153,155,157,-24,-21,-17,162,163,-19,-15,-23,168,169,170,-78,-81,171,172,173,174,-22,-18,-77,-25,-26,-20,-16,]),'DIV':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,83,-70,83,-65,83,83,83,-60,83,-57,83,-58,-64,83,83,83,83,83,83,83,83,-59,-68,-47,83,83,83,83,83,-45,83,83,83,83,83,-44,-43,83,-46,83,83,83,]),'TRUE':([0,2,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[8,8,8,8,8,-4,-3,8,8,8,8,8,-5,8,8,8,8,8,8,8,8,8,8,-2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ADD_AFF':([23,],[60,]),'DEF':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[13,-4,-3,13,-5,13,13,-2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'DIV_INT':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,70,-70,70,-65,70,70,70,-60,70,-57,70,-58,-64,70,70,70,70,70,70,70,70,-59,-68,-47,70,70,70,70,70,-45,70,70,70,70,70,-44,-43,70,-46,70,70,70,]),'LE':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,72,-70,72,-65,72,72,72,-60,72,-57,72,-58,-64,72,72,72,72,72,72,72,72,-59,-68,-47,72,-53,72,-55,-42,-45,72,-52,-41,-54,72,-44,-43,72,-46,72,72,72,]),'POW':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,76,-70,76,-65,76,76,76,-60,76,-57,76,-58,-64,76,76,76,76,76,76,76,76,-59,-68,76,76,76,76,76,76,-45,76,76,76,76,76,76,76,76,-46,76,76,76,]),'NEWLINE':([0,1,2,6,8,9,10,11,14,15,17,19,21,23,26,27,28,30,31,32,33,34,37,38,39,40,41,42,45,47,49,51,52,62,66,68,69,87,88,89,90,93,95,96,97,98,99,100,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,131,133,134,135,136,139,140,141,142,144,145,146,148,149,150,151,152,153,155,156,157,159,161,162,163,164,165,167,168,169,170,171,172,173,174,],[11,-6,-30,-11,-72,47,-9,-4,-3,-69,-75,-12,-14,-70,-13,-73,-74,-7,-71,-27,-8,-28,11,-10,-70,-29,-31,-65,89,-5,11,11,-32,-60,-57,-58,-2,-64,126,11,11,11,11,-40,-38,-35,-36,-37,-39,-33,-34,-59,11,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,11,11,47,11,11,11,-82,152,-76,47,11,11,-24,-21,11,-17,11,11,11,11,11,-19,-15,11,-23,11,11,-78,-81,11,11,11,-22,-18,-77,-25,-26,-20,-16,]),'AFFECT':([23,],[59,]),'NE':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,77,-70,77,-65,77,77,77,-60,77,-57,77,-58,-64,77,77,77,77,77,77,77,77,-59,-68,-47,77,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,77,-46,77,77,77,]),'MUL_AFF':([23,],[56,]),'LT':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,49,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,78,-70,78,-65,78,78,78,92,-60,78,-57,78,-58,-64,78,78,78,78,78,78,78,78,-59,-68,-47,78,-53,78,-55,-42,-45,78,-52,-41,-54,78,-44,-43,78,-46,78,78,78,]),'COMMA':([8,15,17,27,28,31,39,42,43,44,61,62,64,66,68,87,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,132,137,138,160,],[-72,-69,-75,-73,-74,-71,-70,-65,86,-67,-62,-60,106,-57,-58,-64,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,-66,147,-80,-63,-61,-79,]),'RIGHT_SB':([4,8,15,17,27,28,31,39,42,43,44,62,66,68,87,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,],[42,-72,-69,-75,-73,-74,-71,-70,-65,87,-67,-60,-57,-58,-64,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,-66,]),'KEY_OP':([63,],[104,]),'CLASS':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[16,-4,-3,16,-5,16,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([11,12,14,37,47,69,],[-4,0,-3,-1,-5,-2,]),'GT':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,80,-70,80,-65,80,80,80,-60,80,-57,80,-58,-64,80,80,80,80,80,80,80,80,-59,-68,-47,80,-53,80,-55,-42,-45,80,-52,-41,-54,80,-44,-43,80,-46,80,80,80,]),'UNLESS':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[7,-4,-3,7,-5,7,7,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'STRING':([0,2,3,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[17,17,41,17,17,17,-4,-3,17,17,17,17,17,-5,17,17,17,17,17,17,17,17,17,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'FOR':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[18,-4,-3,18,-5,18,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'MIN_AFF':([23,],[55,]),'MODULE':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[20,-4,-3,20,-5,20,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ELSE':([1,2,6,8,10,11,14,15,17,19,21,23,26,27,28,30,31,32,33,34,38,39,40,41,42,47,52,62,66,68,69,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,134,136,139,140,142,144,146,153,155,157,162,163,168,169,170,171,172,173,174,],[-6,-30,-11,-72,-9,-4,-3,-69,-75,-12,-14,-70,-13,-73,-74,-7,-71,-27,-8,-28,-10,-70,-29,-31,-65,-5,-32,-60,-57,-58,-2,-64,-40,-38,-35,-36,-37,-39,-33,-34,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,143,145,-82,-76,154,156,-24,-21,-17,-19,-15,-23,-78,-81,-22,-18,-77,-25,-26,-20,-16,]),'GE':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,74,-70,74,-65,74,74,74,-60,74,-57,74,-58,-64,74,74,74,74,74,74,74,74,-59,-68,-47,74,-53,74,-55,-42,-45,74,-52,-41,-54,74,-44,-43,74,-46,74,74,74,]),'RIGHT_PAR':([8,15,17,27,28,31,39,42,62,66,67,68,87,91,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,132,160,],[-72,-69,-75,-73,-74,-71,-70,-65,-60,-57,108,-58,-64,131,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,148,-80,-79,]),'INCLUDE':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[22,-4,-3,22,-5,22,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'EQ':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,73,-70,73,-65,73,73,73,-60,73,-57,73,-58,-64,73,73,73,73,73,73,73,73,-59,-68,-47,73,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,73,-46,73,73,73,]),'ID':([0,2,4,5,7,11,13,14,16,18,20,22,24,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,92,93,94,95,104,106,107,126,127,129,131,133,140,141,143,145,147,148,149,150,151,152,154,156,159,161,164,165,167,],[23,39,39,39,39,-4,48,-3,49,50,51,52,63,39,39,39,39,23,-5,23,23,39,39,39,39,39,39,39,39,-2,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,23,23,132,133,23,39,23,39,63,23,23,23,23,23,23,23,23,23,23,160,23,23,23,23,23,23,23,23,23,23,23,23,]),'LEFT_CB':([0,2,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[24,24,24,24,24,-4,-3,24,24,24,24,24,-5,24,24,24,24,24,24,24,24,24,24,-2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'IF':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[25,-4,-3,25,-5,25,25,-2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'AND':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,71,-70,71,-65,71,71,71,-60,71,-57,71,-58,-64,71,71,71,71,71,71,71,71,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,71,71,71,]),'POW_AFF':([23,],[53,]),'FALSE':([0,2,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[27,27,27,27,27,-4,-3,27,27,27,27,27,-5,27,27,27,27,27,27,27,27,27,27,-2,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'NIL':([0,2,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[28,28,28,28,28,-4,-3,28,28,28,28,28,-5,28,28,28,28,28,28,28,28,28,28,-2,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'INT':([0,2,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[15,15,15,15,15,-4,-3,15,15,15,15,15,-5,15,15,15,15,15,15,15,15,15,15,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'FLOAT':([0,2,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[31,31,31,31,31,-4,-3,31,31,31,31,31,-5,31,31,31,31,31,31,31,31,31,31,-2,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ADD':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,79,-70,79,-65,79,79,79,-60,79,-57,79,-58,-64,79,79,79,79,79,79,79,79,-59,-68,-47,79,79,79,79,-42,-45,79,79,-41,79,79,-44,-43,79,-46,79,79,79,]),'BREAK':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[32,-4,-3,32,-5,32,32,-2,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CONTINUE':([0,11,14,37,47,49,51,69,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[34,-4,-3,34,-5,34,34,-2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LEFT_PAR':([0,2,4,5,7,11,14,25,29,35,36,37,47,48,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[35,35,35,35,35,-4,-3,35,35,35,35,35,-5,91,35,35,35,35,35,35,35,35,35,35,-2,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'NOT':([0,2,4,5,7,11,14,25,29,35,36,37,47,49,51,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[36,36,36,36,36,-4,-3,36,36,36,36,36,-5,36,36,36,36,36,36,36,36,36,36,-2,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'DIV_INT_AFF':([23,],[54,]),'OR':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,84,-70,84,-65,84,84,84,-60,84,-57,84,-58,-64,84,84,84,84,84,84,84,84,-59,-68,-47,-48,-53,-50,-55,-42,-45,-51,-52,-41,-54,-56,-44,-43,-49,-46,84,84,84,]),'MOD':([8,15,17,23,27,28,31,38,39,40,42,44,45,46,62,65,66,67,68,87,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,137,],[-72,-69,-75,-70,-73,-74,-71,85,-70,85,-65,85,85,85,-60,85,-57,85,-58,-64,85,85,85,85,85,85,85,85,-59,-68,85,85,85,85,85,85,-45,85,85,85,85,85,85,85,85,-46,85,85,85,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'definition':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'selection':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'expression_key':([24,106,],[61,138,]),'interfiles':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'parameters':([91,],[130,]),'modulation':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expressions_suite':([4,],[43,]),'iteration':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'flux':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'program':([0,],[12,]),'statement':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,145,148,149,150,151,152,156,159,161,164,165,167,],[14,69,14,14,14,14,69,69,14,14,69,69,14,14,69,69,14,14,69,69,14,14,14,69,69,69,69,69,]),'declaration':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'affectation':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'statements_suite':([0,49,51,89,90,107,126,131,133,145,148,151,152,156,],[37,93,95,127,129,140,141,149,150,159,161,164,165,167,]),'expression':([0,2,4,5,7,25,29,35,36,37,49,51,53,54,55,56,57,58,59,60,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,93,94,95,104,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[38,40,44,45,46,65,66,67,68,38,38,38,96,97,98,99,100,101,102,103,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,38,38,38,135,38,137,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'expressions_key_suite':([24,],[64,]),'statement_libre':([0,37,49,51,89,90,93,95,107,126,127,129,131,133,140,141,143,145,148,149,150,151,152,154,156,159,161,164,165,167,],[9,9,9,9,9,128,9,9,139,9,9,9,9,9,9,9,158,9,9,9,9,9,9,166,9,9,9,9,9,9,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements_suite','program',1,'p_program','nnparser.py',82),
  ('statements_suite -> statements_suite statement','statements_suite',2,'p_statements_suite','nnparser.py',87),
  ('statements_suite -> statement','statements_suite',1,'p_statements_suite','nnparser.py',88),
  ('statement -> NEWLINE','statement',1,'p_statement_empty','nnparser.py',102),
  ('statement -> statement_libre NEWLINE','statement',2,'p_statement','nnparser.py',106),
  ('statement_libre -> selection','statement_libre',1,'p_statement_libre','nnparser.py',111),
  ('statement_libre -> iteration','statement_libre',1,'p_statement_libre','nnparser.py',112),
  ('statement_libre -> flux','statement_libre',1,'p_statement_libre','nnparser.py',113),
  ('statement_libre -> interfiles','statement_libre',1,'p_statement_libre','nnparser.py',114),
  ('statement_libre -> expression','statement_libre',1,'p_statement_libre','nnparser.py',115),
  ('statement_libre -> affectation','statement_libre',1,'p_statement_libre','nnparser.py',116),
  ('statement_libre -> modulation','statement_libre',1,'p_statement_libre','nnparser.py',117),
  ('statement_libre -> definition','statement_libre',1,'p_statement_libre','nnparser.py',118),
  ('statement_libre -> declaration','statement_libre',1,'p_statement_libre','nnparser.py',119),
  ('selection -> IF expression THEN statements_suite END','selection',5,'p_selection_multi','nnparser.py',124),
  ('selection -> IF expression THEN statements_suite ELSE statements_suite END','selection',7,'p_selection_multi','nnparser.py',125),
  ('selection -> UNLESS expression THEN statements_suite END','selection',5,'p_selection_multi','nnparser.py',126),
  ('selection -> UNLESS expression THEN statements_suite ELSE statements_suite END','selection',7,'p_selection_multi','nnparser.py',127),
  ('selection -> IF expression THEN statement_libre END','selection',5,'p_selection_one','nnparser.py',134),
  ('selection -> IF expression THEN statement_libre ELSE statement_libre END','selection',7,'p_selection_one','nnparser.py',135),
  ('selection -> UNLESS expression THEN statement_libre END','selection',5,'p_selection_one','nnparser.py',136),
  ('selection -> UNLESS expression THEN statement_libre ELSE statement_libre END','selection',7,'p_selection_one','nnparser.py',137),
  ('iteration -> WHILE expression DO NEWLINE statements_suite END','iteration',6,'p_iteration_block','nnparser.py',144),
  ('iteration -> WHILE expression NEWLINE statements_suite END','iteration',5,'p_iteration_block','nnparser.py',145),
  ('iteration -> FOR ID IN expression DO statements_suite END','iteration',7,'p_iteration_block','nnparser.py',146),
  ('iteration -> FOR ID IN expression NEWLINE statements_suite END','iteration',7,'p_iteration_block','nnparser.py',147),
  ('flux -> BREAK','flux',1,'p_flux','nnparser.py',155),
  ('flux -> CONTINUE','flux',1,'p_flux','nnparser.py',156),
  ('flux -> RETURN expression','flux',2,'p_flux','nnparser.py',157),
  ('flux -> RETURN','flux',1,'p_flux','nnparser.py',158),
  ('interfiles -> REQUIRE STRING','interfiles',2,'p_interfiles','nnparser.py',167),
  ('interfiles -> INCLUDE ID','interfiles',2,'p_interfiles','nnparser.py',168),
  ('affectation -> ID AFFECT expression','affectation',3,'p_affectation','nnparser.py',172),
  ('affectation -> ID ADD_AFF expression','affectation',3,'p_affectation','nnparser.py',173),
  ('affectation -> ID MIN_AFF expression','affectation',3,'p_affectation','nnparser.py',174),
  ('affectation -> ID MUL_AFF expression','affectation',3,'p_affectation','nnparser.py',175),
  ('affectation -> ID DIV_AFF expression','affectation',3,'p_affectation','nnparser.py',176),
  ('affectation -> ID DIV_INT_AFF expression','affectation',3,'p_affectation','nnparser.py',177),
  ('affectation -> ID MOD_AFF expression','affectation',3,'p_affectation','nnparser.py',178),
  ('affectation -> ID POW_AFF expression','affectation',3,'p_affectation','nnparser.py',179),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','nnparser.py',185),
  ('expression -> expression MIN expression','expression',3,'p_expression_binop','nnparser.py',186),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','nnparser.py',187),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','nnparser.py',188),
  ('expression -> expression POW expression','expression',3,'p_expression_binop','nnparser.py',189),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','nnparser.py',190),
  ('expression -> expression DIV_INT expression','expression',3,'p_expression_binop','nnparser.py',191),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','nnparser.py',192),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','nnparser.py',193),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','nnparser.py',194),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','nnparser.py',195),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','nnparser.py',196),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','nnparser.py',197),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','nnparser.py',198),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','nnparser.py',199),
  ('expression -> expression IN expression','expression',3,'p_expression_binop','nnparser.py',200),
  ('expression -> MIN expression','expression',2,'p_expression_una','nnparser.py',207),
  ('expression -> NOT expression','expression',2,'p_expression_una','nnparser.py',208),
  ('expression -> LEFT_CB expressions_key_suite RIGHT_CB','expression',3,'p_expression_curly','nnparser.py',214),
  ('expression -> LEFT_CB RIGHT_CB','expression',2,'p_expression_curly','nnparser.py',215),
  ('expressions_key_suite -> expressions_key_suite COMMA expression_key','expressions_key_suite',3,'p_expressions_key_suite','nnparser.py',222),
  ('expressions_key_suite -> expression_key','expressions_key_suite',1,'p_expressions_key_suite','nnparser.py',223),
  ('expression_key -> ID KEY_OP expression','expression_key',3,'p_expression_key','nnparser.py',233),
  ('expression -> LEFT_SB expressions_suite RIGHT_SB','expression',3,'p_expression_square','nnparser.py',239),
  ('expression -> LEFT_SB RIGHT_SB','expression',2,'p_expression_square','nnparser.py',240),
  ('expressions_suite -> expressions_suite COMMA expression','expressions_suite',3,'p_expressions_suite','nnparser.py',247),
  ('expressions_suite -> expression','expressions_suite',1,'p_expressions_suite','nnparser.py',248),
  ('expression -> LEFT_PAR expression RIGHT_PAR','expression',3,'p_expression_par','nnparser.py',258),
  ('expression -> INT','expression',1,'p_expression_int','nnparser.py',263),
  ('expression -> ID','expression',1,'p_expression_id','nnparser.py',268),
  ('expression -> FLOAT','expression',1,'p_expression_flt','nnparser.py',273),
  ('expression -> TRUE','expression',1,'p_expression_true','nnparser.py',278),
  ('expression -> FALSE','expression',1,'p_expression_false','nnparser.py',283),
  ('expression -> NIL','expression',1,'p_expression_nil','nnparser.py',288),
  ('expression -> STRING','expression',1,'p_expression_str','nnparser.py',292),
  ('modulation -> MODULE ID statements_suite END','modulation',4,'p_modulation','nnparser.py',297),
  ('definition -> DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END','definition',7,'p_definition','nnparser.py',301),
  ('definition -> DEF ID LEFT_PAR RIGHT_PAR statements_suite END','definition',6,'p_definition','nnparser.py',302),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','nnparser.py',309),
  ('parameters -> ID','parameters',1,'p_parameters','nnparser.py',310),
  ('declaration -> CLASS ID LT ID statements_suite END','declaration',6,'p_declaration','nnparser.py',320),
  ('declaration -> CLASS ID statements_suite END','declaration',4,'p_declaration','nnparser.py',321),
]
