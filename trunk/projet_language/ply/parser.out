Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    SEMI
    COMMENT
    ELSIF

Grammar

Rule 0     S' -> program
Rule 1     program -> statements_suite
Rule 2     statements_suite -> statements_suite statement
Rule 3     statements_suite -> statement
Rule 4     statement -> NEWLINE
Rule 5     statement -> statement_libre NEWLINE
Rule 6     statement_libre -> selection
Rule 7     statement_libre -> iteration
Rule 8     statement_libre -> flux
Rule 9     statement_libre -> interfiles
Rule 10    statement_libre -> expression
Rule 11    statement_libre -> affectation
Rule 12    statement_libre -> modulation
Rule 13    statement_libre -> definition
Rule 14    statement_libre -> declaration
Rule 15    selection -> IF expression THEN statements_suite END
Rule 16    selection -> IF expression THEN statements_suite ELSE statements_suite END
Rule 17    selection -> UNLESS expression THEN statements_suite END
Rule 18    selection -> UNLESS expression THEN statements_suite ELSE statements_suite END
Rule 19    selection -> IF expression THEN statement_libre END
Rule 20    selection -> IF expression THEN statement_libre ELSE statement_libre END
Rule 21    selection -> UNLESS expression THEN statement_libre END
Rule 22    selection -> UNLESS expression THEN statement_libre ELSE statement_libre END
Rule 23    iteration -> WHILE expression DO NEWLINE statements_suite END
Rule 24    iteration -> WHILE expression NEWLINE statements_suite END
Rule 25    iteration -> FOR ID IN expression DO statements_suite END
Rule 26    iteration -> FOR ID IN expression NEWLINE statements_suite END
Rule 27    iteration -> WHILE expression DO NEWLINE statement_libre END
Rule 28    iteration -> WHILE expression DO statement_libre END
Rule 29    iteration -> WHILE expression NEWLINE statement_libre END
Rule 30    flux -> BREAK
Rule 31    flux -> NEXT
Rule 32    flux -> RETURN expression
Rule 33    flux -> RETURN
Rule 34    interfiles -> REQUIRE STRING
Rule 35    interfiles -> INCLUDE ID
Rule 36    affectation -> ID AFFECT expression
Rule 37    affectation -> ID ADD_AFF expression
Rule 38    affectation -> ID MIN_AFF expression
Rule 39    affectation -> ID MUL_AFF expression
Rule 40    affectation -> ID DIV_AFF expression
Rule 41    affectation -> ID DIV_INT_AFF expression
Rule 42    affectation -> ID MOD_AFF expression
Rule 43    affectation -> ID POW_AFF expression
Rule 44    expression -> expression LEFT_PAR expressions_suite RIGHT_PAR
Rule 45    expression -> expression LEFT_PAR RIGHT_PAR
Rule 46    expression -> expression ADD expression
Rule 47    expression -> expression MIN expression
Rule 48    expression -> expression DIV expression
Rule 49    expression -> expression MUL expression
Rule 50    expression -> expression POW expression
Rule 51    expression -> expression MOD expression
Rule 52    expression -> expression DIV_INT expression
Rule 53    expression -> expression AND expression
Rule 54    expression -> expression OR expression
Rule 55    expression -> expression EQ expression
Rule 56    expression -> expression NE expression
Rule 57    expression -> expression LT expression
Rule 58    expression -> expression LE expression
Rule 59    expression -> expression GT expression
Rule 60    expression -> expression GE expression
Rule 61    expression -> expression IN expression
Rule 62    expression -> expression DOT expression
Rule 63    expression -> expression LSHIFT expression
Rule 64    expression -> MIN expression
Rule 65    expression -> NOT expression
Rule 66    expression -> LEFT_CB expressions_key_suite RIGHT_CB
Rule 67    expression -> LEFT_CB RIGHT_CB
Rule 68    expressions_key_suite -> expressions_key_suite COMMA expression_key
Rule 69    expressions_key_suite -> expression_key
Rule 70    expression_key -> ID KEY_OP expression
Rule 71    expression -> LEFT_SB expressions_suite RIGHT_SB
Rule 72    expression -> LEFT_SB RIGHT_SB
Rule 73    expressions_suite -> expressions_suite COMMA expression
Rule 74    expressions_suite -> expression
Rule 75    expression -> LEFT_PAR expression RIGHT_PAR
Rule 76    expression -> INT
Rule 77    expression -> ID
Rule 78    expression -> FLOAT
Rule 79    expression -> TRUE
Rule 80    expression -> FALSE
Rule 81    expression -> NIL
Rule 82    expression -> STRING
Rule 83    modulation -> MODULE ID statements_suite END
Rule 84    definition -> DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
Rule 85    definition -> DEF ID LEFT_PAR RIGHT_PAR statements_suite END
Rule 86    parameters -> parameters COMMA parameter
Rule 87    parameters -> parameter
Rule 88    parameter -> ID ID
Rule 89    parameter -> ID
Rule 90    declaration -> CLASS ID LT ID statements_suite END
Rule 91    declaration -> CLASS ID statements_suite END

Terminals, with rules where they appear

ADD                  : 46
ADD_AFF              : 37
AFFECT               : 36
AND                  : 53
BREAK                : 30
CLASS                : 90 91
COMMA                : 68 73 86
COMMENT              : 
DEF                  : 84 85
DIV                  : 48
DIV_AFF              : 40
DIV_INT              : 52
DIV_INT_AFF          : 41
DO                   : 23 25 27 28
DOT                  : 62
ELSE                 : 16 18 20 22
ELSIF                : 
END                  : 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 83 84 85 90 91
EQ                   : 55
FALSE                : 80
FLOAT                : 78
FOR                  : 25 26
GE                   : 60
GT                   : 59
ID                   : 25 26 35 36 37 38 39 40 41 42 43 70 77 83 84 85 88 88 89 90 90 91
IF                   : 15 16 19 20
IN                   : 25 26 61
INCLUDE              : 35
INT                  : 76
KEY_OP               : 70
LE                   : 58
LEFT_CB              : 66 67
LEFT_PAR             : 44 45 75 84 85
LEFT_SB              : 71 72
LSHIFT               : 63
LT                   : 57 90
MIN                  : 47 64
MIN_AFF              : 38
MOD                  : 51
MODULE               : 83
MOD_AFF              : 42
MUL                  : 49
MUL_AFF              : 39
NE                   : 56
NEWLINE              : 4 5 23 24 26 27 29
NEXT                 : 31
NIL                  : 81
NOT                  : 65
OR                   : 54
POW                  : 50
POW_AFF              : 43
REQUIRE              : 34
RETURN               : 32 33
RIGHT_CB             : 66 67
RIGHT_PAR            : 44 45 75 84 85
RIGHT_SB             : 71 72
SEMI                 : 
STRING               : 34 82
THEN                 : 15 16 17 18 19 20 21 22
TRUE                 : 79
UNLESS               : 17 18 21 22
WHILE                : 23 24 27 28 29
error                : 

Nonterminals, with rules where they appear

affectation          : 11
declaration          : 14
definition           : 13
expression           : 10 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 32 36 37 38 39 40 41 42 43 44 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 65 70 73 74 75
expression_key       : 68 69
expressions_key_suite : 66 68
expressions_suite    : 44 71 73
flux                 : 8
interfiles           : 9
iteration            : 7
modulation           : 12
parameter            : 86 87
parameters           : 84 86
program              : 0
selection            : 6
statement            : 2 3
statement_libre      : 5 19 20 20 21 22 22 27 28 29
statements_suite     : 1 2 15 16 16 17 18 18 23 24 25 26 83 84 85 90 91

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements_suite
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    program                        shift and go to state 13
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 37
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 1

    (6) statement_libre -> selection .

    NEWLINE         reduce using rule 6 (statement_libre -> selection .)
    END             reduce using rule 6 (statement_libre -> selection .)
    ELSE            reduce using rule 6 (statement_libre -> selection .)


state 2

    (32) flux -> RETURN . expression
    (33) flux -> RETURN .
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    NEWLINE         reduce using rule 33 (flux -> RETURN .)
    END             reduce using rule 33 (flux -> RETURN .)
    ELSE            reduce using rule 33 (flux -> RETURN .)
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 40

state 3

    (34) interfiles -> REQUIRE . STRING

    STRING          shift and go to state 41


state 4

    (71) expression -> LEFT_SB . expressions_suite RIGHT_SB
    (72) expression -> LEFT_SB . RIGHT_SB
    (73) expressions_suite -> . expressions_suite COMMA expression
    (74) expressions_suite -> . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    RIGHT_SB        shift and go to state 42
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expressions_suite              shift and go to state 43
    expression                     shift and go to state 44

state 5

    (23) iteration -> WHILE . expression DO NEWLINE statements_suite END
    (24) iteration -> WHILE . expression NEWLINE statements_suite END
    (27) iteration -> WHILE . expression DO NEWLINE statement_libre END
    (28) iteration -> WHILE . expression DO statement_libre END
    (29) iteration -> WHILE . expression NEWLINE statement_libre END
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 45

state 6

    (11) statement_libre -> affectation .

    NEWLINE         reduce using rule 11 (statement_libre -> affectation .)
    END             reduce using rule 11 (statement_libre -> affectation .)
    ELSE            reduce using rule 11 (statement_libre -> affectation .)


state 7

    (17) selection -> UNLESS . expression THEN statements_suite END
    (18) selection -> UNLESS . expression THEN statements_suite ELSE statements_suite END
    (21) selection -> UNLESS . expression THEN statement_libre END
    (22) selection -> UNLESS . expression THEN statement_libre ELSE statement_libre END
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 46

state 8

    (79) expression -> TRUE .

    LEFT_PAR        reduce using rule 79 (expression -> TRUE .)
    ADD             reduce using rule 79 (expression -> TRUE .)
    MIN             reduce using rule 79 (expression -> TRUE .)
    DIV             reduce using rule 79 (expression -> TRUE .)
    MUL             reduce using rule 79 (expression -> TRUE .)
    POW             reduce using rule 79 (expression -> TRUE .)
    MOD             reduce using rule 79 (expression -> TRUE .)
    DIV_INT         reduce using rule 79 (expression -> TRUE .)
    AND             reduce using rule 79 (expression -> TRUE .)
    OR              reduce using rule 79 (expression -> TRUE .)
    EQ              reduce using rule 79 (expression -> TRUE .)
    NE              reduce using rule 79 (expression -> TRUE .)
    LT              reduce using rule 79 (expression -> TRUE .)
    LE              reduce using rule 79 (expression -> TRUE .)
    GT              reduce using rule 79 (expression -> TRUE .)
    GE              reduce using rule 79 (expression -> TRUE .)
    IN              reduce using rule 79 (expression -> TRUE .)
    DOT             reduce using rule 79 (expression -> TRUE .)
    LSHIFT          reduce using rule 79 (expression -> TRUE .)
    END             reduce using rule 79 (expression -> TRUE .)
    NEWLINE         reduce using rule 79 (expression -> TRUE .)
    THEN            reduce using rule 79 (expression -> TRUE .)
    ELSE            reduce using rule 79 (expression -> TRUE .)
    RIGHT_SB        reduce using rule 79 (expression -> TRUE .)
    COMMA           reduce using rule 79 (expression -> TRUE .)
    DO              reduce using rule 79 (expression -> TRUE .)
    RIGHT_PAR       reduce using rule 79 (expression -> TRUE .)
    RIGHT_CB        reduce using rule 79 (expression -> TRUE .)


state 9

    (5) statement -> statement_libre . NEWLINE

    NEWLINE         shift and go to state 47


state 10

    (9) statement_libre -> interfiles .

    NEWLINE         reduce using rule 9 (statement_libre -> interfiles .)
    END             reduce using rule 9 (statement_libre -> interfiles .)
    ELSE            reduce using rule 9 (statement_libre -> interfiles .)


state 11

    (4) statement -> NEWLINE .

    END             reduce using rule 4 (statement -> NEWLINE .)
    NEWLINE         reduce using rule 4 (statement -> NEWLINE .)
    IF              reduce using rule 4 (statement -> NEWLINE .)
    UNLESS          reduce using rule 4 (statement -> NEWLINE .)
    WHILE           reduce using rule 4 (statement -> NEWLINE .)
    FOR             reduce using rule 4 (statement -> NEWLINE .)
    BREAK           reduce using rule 4 (statement -> NEWLINE .)
    NEXT            reduce using rule 4 (statement -> NEWLINE .)
    RETURN          reduce using rule 4 (statement -> NEWLINE .)
    REQUIRE         reduce using rule 4 (statement -> NEWLINE .)
    INCLUDE         reduce using rule 4 (statement -> NEWLINE .)
    MIN             reduce using rule 4 (statement -> NEWLINE .)
    NOT             reduce using rule 4 (statement -> NEWLINE .)
    LEFT_CB         reduce using rule 4 (statement -> NEWLINE .)
    LEFT_SB         reduce using rule 4 (statement -> NEWLINE .)
    LEFT_PAR        reduce using rule 4 (statement -> NEWLINE .)
    INT             reduce using rule 4 (statement -> NEWLINE .)
    ID              reduce using rule 4 (statement -> NEWLINE .)
    FLOAT           reduce using rule 4 (statement -> NEWLINE .)
    TRUE            reduce using rule 4 (statement -> NEWLINE .)
    FALSE           reduce using rule 4 (statement -> NEWLINE .)
    NIL             reduce using rule 4 (statement -> NEWLINE .)
    STRING          reduce using rule 4 (statement -> NEWLINE .)
    MODULE          reduce using rule 4 (statement -> NEWLINE .)
    DEF             reduce using rule 4 (statement -> NEWLINE .)
    CLASS           reduce using rule 4 (statement -> NEWLINE .)
    $end            reduce using rule 4 (statement -> NEWLINE .)
    ELSE            reduce using rule 4 (statement -> NEWLINE .)


state 12

    (31) flux -> NEXT .

    NEWLINE         reduce using rule 31 (flux -> NEXT .)
    END             reduce using rule 31 (flux -> NEXT .)
    ELSE            reduce using rule 31 (flux -> NEXT .)


state 13

    (0) S' -> program .



state 14

    (84) definition -> DEF . ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> DEF . ID LEFT_PAR RIGHT_PAR statements_suite END

    ID              shift and go to state 48


state 15

    (3) statements_suite -> statement .

    END             reduce using rule 3 (statements_suite -> statement .)
    NEWLINE         reduce using rule 3 (statements_suite -> statement .)
    IF              reduce using rule 3 (statements_suite -> statement .)
    UNLESS          reduce using rule 3 (statements_suite -> statement .)
    WHILE           reduce using rule 3 (statements_suite -> statement .)
    FOR             reduce using rule 3 (statements_suite -> statement .)
    BREAK           reduce using rule 3 (statements_suite -> statement .)
    NEXT            reduce using rule 3 (statements_suite -> statement .)
    RETURN          reduce using rule 3 (statements_suite -> statement .)
    REQUIRE         reduce using rule 3 (statements_suite -> statement .)
    INCLUDE         reduce using rule 3 (statements_suite -> statement .)
    MIN             reduce using rule 3 (statements_suite -> statement .)
    NOT             reduce using rule 3 (statements_suite -> statement .)
    LEFT_CB         reduce using rule 3 (statements_suite -> statement .)
    LEFT_SB         reduce using rule 3 (statements_suite -> statement .)
    LEFT_PAR        reduce using rule 3 (statements_suite -> statement .)
    INT             reduce using rule 3 (statements_suite -> statement .)
    ID              reduce using rule 3 (statements_suite -> statement .)
    FLOAT           reduce using rule 3 (statements_suite -> statement .)
    TRUE            reduce using rule 3 (statements_suite -> statement .)
    FALSE           reduce using rule 3 (statements_suite -> statement .)
    NIL             reduce using rule 3 (statements_suite -> statement .)
    STRING          reduce using rule 3 (statements_suite -> statement .)
    MODULE          reduce using rule 3 (statements_suite -> statement .)
    DEF             reduce using rule 3 (statements_suite -> statement .)
    CLASS           reduce using rule 3 (statements_suite -> statement .)
    ELSE            reduce using rule 3 (statements_suite -> statement .)
    $end            reduce using rule 3 (statements_suite -> statement .)


state 16

    (76) expression -> INT .

    LEFT_PAR        reduce using rule 76 (expression -> INT .)
    ADD             reduce using rule 76 (expression -> INT .)
    MIN             reduce using rule 76 (expression -> INT .)
    DIV             reduce using rule 76 (expression -> INT .)
    MUL             reduce using rule 76 (expression -> INT .)
    POW             reduce using rule 76 (expression -> INT .)
    MOD             reduce using rule 76 (expression -> INT .)
    DIV_INT         reduce using rule 76 (expression -> INT .)
    AND             reduce using rule 76 (expression -> INT .)
    OR              reduce using rule 76 (expression -> INT .)
    EQ              reduce using rule 76 (expression -> INT .)
    NE              reduce using rule 76 (expression -> INT .)
    LT              reduce using rule 76 (expression -> INT .)
    LE              reduce using rule 76 (expression -> INT .)
    GT              reduce using rule 76 (expression -> INT .)
    GE              reduce using rule 76 (expression -> INT .)
    IN              reduce using rule 76 (expression -> INT .)
    DOT             reduce using rule 76 (expression -> INT .)
    LSHIFT          reduce using rule 76 (expression -> INT .)
    END             reduce using rule 76 (expression -> INT .)
    NEWLINE         reduce using rule 76 (expression -> INT .)
    THEN            reduce using rule 76 (expression -> INT .)
    ELSE            reduce using rule 76 (expression -> INT .)
    RIGHT_SB        reduce using rule 76 (expression -> INT .)
    COMMA           reduce using rule 76 (expression -> INT .)
    DO              reduce using rule 76 (expression -> INT .)
    RIGHT_PAR       reduce using rule 76 (expression -> INT .)
    RIGHT_CB        reduce using rule 76 (expression -> INT .)


state 17

    (90) declaration -> CLASS . ID LT ID statements_suite END
    (91) declaration -> CLASS . ID statements_suite END

    ID              shift and go to state 49


state 18

    (82) expression -> STRING .

    LEFT_PAR        reduce using rule 82 (expression -> STRING .)
    ADD             reduce using rule 82 (expression -> STRING .)
    MIN             reduce using rule 82 (expression -> STRING .)
    DIV             reduce using rule 82 (expression -> STRING .)
    MUL             reduce using rule 82 (expression -> STRING .)
    POW             reduce using rule 82 (expression -> STRING .)
    MOD             reduce using rule 82 (expression -> STRING .)
    DIV_INT         reduce using rule 82 (expression -> STRING .)
    AND             reduce using rule 82 (expression -> STRING .)
    OR              reduce using rule 82 (expression -> STRING .)
    EQ              reduce using rule 82 (expression -> STRING .)
    NE              reduce using rule 82 (expression -> STRING .)
    LT              reduce using rule 82 (expression -> STRING .)
    LE              reduce using rule 82 (expression -> STRING .)
    GT              reduce using rule 82 (expression -> STRING .)
    GE              reduce using rule 82 (expression -> STRING .)
    IN              reduce using rule 82 (expression -> STRING .)
    DOT             reduce using rule 82 (expression -> STRING .)
    LSHIFT          reduce using rule 82 (expression -> STRING .)
    END             reduce using rule 82 (expression -> STRING .)
    NEWLINE         reduce using rule 82 (expression -> STRING .)
    THEN            reduce using rule 82 (expression -> STRING .)
    ELSE            reduce using rule 82 (expression -> STRING .)
    RIGHT_SB        reduce using rule 82 (expression -> STRING .)
    COMMA           reduce using rule 82 (expression -> STRING .)
    DO              reduce using rule 82 (expression -> STRING .)
    RIGHT_PAR       reduce using rule 82 (expression -> STRING .)
    RIGHT_CB        reduce using rule 82 (expression -> STRING .)


state 19

    (25) iteration -> FOR . ID IN expression DO statements_suite END
    (26) iteration -> FOR . ID IN expression NEWLINE statements_suite END

    ID              shift and go to state 50


state 20

    (12) statement_libre -> modulation .

    NEWLINE         reduce using rule 12 (statement_libre -> modulation .)
    END             reduce using rule 12 (statement_libre -> modulation .)
    ELSE            reduce using rule 12 (statement_libre -> modulation .)


state 21

    (83) modulation -> MODULE . ID statements_suite END

    ID              shift and go to state 51


state 22

    (14) statement_libre -> declaration .

    NEWLINE         reduce using rule 14 (statement_libre -> declaration .)
    END             reduce using rule 14 (statement_libre -> declaration .)
    ELSE            reduce using rule 14 (statement_libre -> declaration .)


state 23

    (35) interfiles -> INCLUDE . ID

    ID              shift and go to state 52


state 24

    (77) expression -> ID .
    (36) affectation -> ID . AFFECT expression
    (37) affectation -> ID . ADD_AFF expression
    (38) affectation -> ID . MIN_AFF expression
    (39) affectation -> ID . MUL_AFF expression
    (40) affectation -> ID . DIV_AFF expression
    (41) affectation -> ID . DIV_INT_AFF expression
    (42) affectation -> ID . MOD_AFF expression
    (43) affectation -> ID . POW_AFF expression

    LEFT_PAR        reduce using rule 77 (expression -> ID .)
    ADD             reduce using rule 77 (expression -> ID .)
    MIN             reduce using rule 77 (expression -> ID .)
    DIV             reduce using rule 77 (expression -> ID .)
    MUL             reduce using rule 77 (expression -> ID .)
    POW             reduce using rule 77 (expression -> ID .)
    MOD             reduce using rule 77 (expression -> ID .)
    DIV_INT         reduce using rule 77 (expression -> ID .)
    AND             reduce using rule 77 (expression -> ID .)
    OR              reduce using rule 77 (expression -> ID .)
    EQ              reduce using rule 77 (expression -> ID .)
    NE              reduce using rule 77 (expression -> ID .)
    LT              reduce using rule 77 (expression -> ID .)
    LE              reduce using rule 77 (expression -> ID .)
    GT              reduce using rule 77 (expression -> ID .)
    GE              reduce using rule 77 (expression -> ID .)
    IN              reduce using rule 77 (expression -> ID .)
    DOT             reduce using rule 77 (expression -> ID .)
    LSHIFT          reduce using rule 77 (expression -> ID .)
    END             reduce using rule 77 (expression -> ID .)
    NEWLINE         reduce using rule 77 (expression -> ID .)
    ELSE            reduce using rule 77 (expression -> ID .)
    AFFECT          shift and go to state 59
    ADD_AFF         shift and go to state 60
    MIN_AFF         shift and go to state 55
    MUL_AFF         shift and go to state 56
    DIV_AFF         shift and go to state 57
    DIV_INT_AFF     shift and go to state 54
    MOD_AFF         shift and go to state 58
    POW_AFF         shift and go to state 53


state 25

    (66) expression -> LEFT_CB . expressions_key_suite RIGHT_CB
    (67) expression -> LEFT_CB . RIGHT_CB
    (68) expressions_key_suite -> . expressions_key_suite COMMA expression_key
    (69) expressions_key_suite -> . expression_key
    (70) expression_key -> . ID KEY_OP expression

    RIGHT_CB        shift and go to state 62
    ID              shift and go to state 63

    expression_key                 shift and go to state 61
    expressions_key_suite          shift and go to state 64

state 26

    (15) selection -> IF . expression THEN statements_suite END
    (16) selection -> IF . expression THEN statements_suite ELSE statements_suite END
    (19) selection -> IF . expression THEN statement_libre END
    (20) selection -> IF . expression THEN statement_libre ELSE statement_libre END
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 65

state 27

    (13) statement_libre -> definition .

    NEWLINE         reduce using rule 13 (statement_libre -> definition .)
    END             reduce using rule 13 (statement_libre -> definition .)
    ELSE            reduce using rule 13 (statement_libre -> definition .)


state 28

    (80) expression -> FALSE .

    LEFT_PAR        reduce using rule 80 (expression -> FALSE .)
    ADD             reduce using rule 80 (expression -> FALSE .)
    MIN             reduce using rule 80 (expression -> FALSE .)
    DIV             reduce using rule 80 (expression -> FALSE .)
    MUL             reduce using rule 80 (expression -> FALSE .)
    POW             reduce using rule 80 (expression -> FALSE .)
    MOD             reduce using rule 80 (expression -> FALSE .)
    DIV_INT         reduce using rule 80 (expression -> FALSE .)
    AND             reduce using rule 80 (expression -> FALSE .)
    OR              reduce using rule 80 (expression -> FALSE .)
    EQ              reduce using rule 80 (expression -> FALSE .)
    NE              reduce using rule 80 (expression -> FALSE .)
    LT              reduce using rule 80 (expression -> FALSE .)
    LE              reduce using rule 80 (expression -> FALSE .)
    GT              reduce using rule 80 (expression -> FALSE .)
    GE              reduce using rule 80 (expression -> FALSE .)
    IN              reduce using rule 80 (expression -> FALSE .)
    DOT             reduce using rule 80 (expression -> FALSE .)
    LSHIFT          reduce using rule 80 (expression -> FALSE .)
    END             reduce using rule 80 (expression -> FALSE .)
    NEWLINE         reduce using rule 80 (expression -> FALSE .)
    THEN            reduce using rule 80 (expression -> FALSE .)
    ELSE            reduce using rule 80 (expression -> FALSE .)
    RIGHT_SB        reduce using rule 80 (expression -> FALSE .)
    COMMA           reduce using rule 80 (expression -> FALSE .)
    DO              reduce using rule 80 (expression -> FALSE .)
    RIGHT_PAR       reduce using rule 80 (expression -> FALSE .)
    RIGHT_CB        reduce using rule 80 (expression -> FALSE .)


state 29

    (81) expression -> NIL .

    LEFT_PAR        reduce using rule 81 (expression -> NIL .)
    ADD             reduce using rule 81 (expression -> NIL .)
    MIN             reduce using rule 81 (expression -> NIL .)
    DIV             reduce using rule 81 (expression -> NIL .)
    MUL             reduce using rule 81 (expression -> NIL .)
    POW             reduce using rule 81 (expression -> NIL .)
    MOD             reduce using rule 81 (expression -> NIL .)
    DIV_INT         reduce using rule 81 (expression -> NIL .)
    AND             reduce using rule 81 (expression -> NIL .)
    OR              reduce using rule 81 (expression -> NIL .)
    EQ              reduce using rule 81 (expression -> NIL .)
    NE              reduce using rule 81 (expression -> NIL .)
    LT              reduce using rule 81 (expression -> NIL .)
    LE              reduce using rule 81 (expression -> NIL .)
    GT              reduce using rule 81 (expression -> NIL .)
    GE              reduce using rule 81 (expression -> NIL .)
    IN              reduce using rule 81 (expression -> NIL .)
    DOT             reduce using rule 81 (expression -> NIL .)
    LSHIFT          reduce using rule 81 (expression -> NIL .)
    END             reduce using rule 81 (expression -> NIL .)
    NEWLINE         reduce using rule 81 (expression -> NIL .)
    THEN            reduce using rule 81 (expression -> NIL .)
    ELSE            reduce using rule 81 (expression -> NIL .)
    RIGHT_SB        reduce using rule 81 (expression -> NIL .)
    COMMA           reduce using rule 81 (expression -> NIL .)
    DO              reduce using rule 81 (expression -> NIL .)
    RIGHT_PAR       reduce using rule 81 (expression -> NIL .)
    RIGHT_CB        reduce using rule 81 (expression -> NIL .)


state 30

    (64) expression -> MIN . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 66

state 31

    (7) statement_libre -> iteration .

    NEWLINE         reduce using rule 7 (statement_libre -> iteration .)
    END             reduce using rule 7 (statement_libre -> iteration .)
    ELSE            reduce using rule 7 (statement_libre -> iteration .)


state 32

    (78) expression -> FLOAT .

    LEFT_PAR        reduce using rule 78 (expression -> FLOAT .)
    ADD             reduce using rule 78 (expression -> FLOAT .)
    MIN             reduce using rule 78 (expression -> FLOAT .)
    DIV             reduce using rule 78 (expression -> FLOAT .)
    MUL             reduce using rule 78 (expression -> FLOAT .)
    POW             reduce using rule 78 (expression -> FLOAT .)
    MOD             reduce using rule 78 (expression -> FLOAT .)
    DIV_INT         reduce using rule 78 (expression -> FLOAT .)
    AND             reduce using rule 78 (expression -> FLOAT .)
    OR              reduce using rule 78 (expression -> FLOAT .)
    EQ              reduce using rule 78 (expression -> FLOAT .)
    NE              reduce using rule 78 (expression -> FLOAT .)
    LT              reduce using rule 78 (expression -> FLOAT .)
    LE              reduce using rule 78 (expression -> FLOAT .)
    GT              reduce using rule 78 (expression -> FLOAT .)
    GE              reduce using rule 78 (expression -> FLOAT .)
    IN              reduce using rule 78 (expression -> FLOAT .)
    DOT             reduce using rule 78 (expression -> FLOAT .)
    LSHIFT          reduce using rule 78 (expression -> FLOAT .)
    END             reduce using rule 78 (expression -> FLOAT .)
    NEWLINE         reduce using rule 78 (expression -> FLOAT .)
    THEN            reduce using rule 78 (expression -> FLOAT .)
    ELSE            reduce using rule 78 (expression -> FLOAT .)
    RIGHT_SB        reduce using rule 78 (expression -> FLOAT .)
    COMMA           reduce using rule 78 (expression -> FLOAT .)
    DO              reduce using rule 78 (expression -> FLOAT .)
    RIGHT_PAR       reduce using rule 78 (expression -> FLOAT .)
    RIGHT_CB        reduce using rule 78 (expression -> FLOAT .)


state 33

    (30) flux -> BREAK .

    NEWLINE         reduce using rule 30 (flux -> BREAK .)
    END             reduce using rule 30 (flux -> BREAK .)
    ELSE            reduce using rule 30 (flux -> BREAK .)


state 34

    (8) statement_libre -> flux .

    NEWLINE         reduce using rule 8 (statement_libre -> flux .)
    END             reduce using rule 8 (statement_libre -> flux .)
    ELSE            reduce using rule 8 (statement_libre -> flux .)


state 35

    (75) expression -> LEFT_PAR . expression RIGHT_PAR
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 67

state 36

    (65) expression -> NOT . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 68

state 37

    (1) program -> statements_suite .
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    $end            reduce using rule 1 (program -> statements_suite .)
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 38

    (10) statement_libre -> expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 10 (statement_libre -> expression .)
    END             reduce using rule 10 (statement_libre -> expression .)
    ELSE            reduce using rule 10 (statement_libre -> expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 39

    (77) expression -> ID .

    THEN            reduce using rule 77 (expression -> ID .)
    LEFT_PAR        reduce using rule 77 (expression -> ID .)
    ADD             reduce using rule 77 (expression -> ID .)
    MIN             reduce using rule 77 (expression -> ID .)
    DIV             reduce using rule 77 (expression -> ID .)
    MUL             reduce using rule 77 (expression -> ID .)
    POW             reduce using rule 77 (expression -> ID .)
    MOD             reduce using rule 77 (expression -> ID .)
    DIV_INT         reduce using rule 77 (expression -> ID .)
    AND             reduce using rule 77 (expression -> ID .)
    OR              reduce using rule 77 (expression -> ID .)
    EQ              reduce using rule 77 (expression -> ID .)
    NE              reduce using rule 77 (expression -> ID .)
    LT              reduce using rule 77 (expression -> ID .)
    LE              reduce using rule 77 (expression -> ID .)
    GT              reduce using rule 77 (expression -> ID .)
    GE              reduce using rule 77 (expression -> ID .)
    IN              reduce using rule 77 (expression -> ID .)
    DOT             reduce using rule 77 (expression -> ID .)
    LSHIFT          reduce using rule 77 (expression -> ID .)
    NEWLINE         reduce using rule 77 (expression -> ID .)
    END             reduce using rule 77 (expression -> ID .)
    ELSE            reduce using rule 77 (expression -> ID .)
    RIGHT_SB        reduce using rule 77 (expression -> ID .)
    COMMA           reduce using rule 77 (expression -> ID .)
    DO              reduce using rule 77 (expression -> ID .)
    RIGHT_PAR       reduce using rule 77 (expression -> ID .)
    RIGHT_CB        reduce using rule 77 (expression -> ID .)


state 40

    (32) flux -> RETURN expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 32 (flux -> RETURN expression .)
    END             reduce using rule 32 (flux -> RETURN expression .)
    ELSE            reduce using rule 32 (flux -> RETURN expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 41

    (34) interfiles -> REQUIRE STRING .

    NEWLINE         reduce using rule 34 (interfiles -> REQUIRE STRING .)
    END             reduce using rule 34 (interfiles -> REQUIRE STRING .)
    ELSE            reduce using rule 34 (interfiles -> REQUIRE STRING .)


state 42

    (72) expression -> LEFT_SB RIGHT_SB .

    LEFT_PAR        reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    ADD             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    MIN             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    DIV             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    MUL             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    POW             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    MOD             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    DIV_INT         reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    AND             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    OR              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    EQ              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    NE              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    LT              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    LE              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    GT              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    GE              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    IN              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    DOT             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    LSHIFT          reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    END             reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    NEWLINE         reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    THEN            reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    ELSE            reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    RIGHT_SB        reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    COMMA           reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    DO              reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    RIGHT_PAR       reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)
    RIGHT_CB        reduce using rule 72 (expression -> LEFT_SB RIGHT_SB .)


state 43

    (71) expression -> LEFT_SB expressions_suite . RIGHT_SB
    (73) expressions_suite -> expressions_suite . COMMA expression

    RIGHT_SB        shift and go to state 90
    COMMA           shift and go to state 89


state 44

    (74) expressions_suite -> expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    RIGHT_PAR       reduce using rule 74 (expressions_suite -> expression .)
    COMMA           reduce using rule 74 (expressions_suite -> expression .)
    RIGHT_SB        reduce using rule 74 (expressions_suite -> expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 45

    (23) iteration -> WHILE expression . DO NEWLINE statements_suite END
    (24) iteration -> WHILE expression . NEWLINE statements_suite END
    (27) iteration -> WHILE expression . DO NEWLINE statement_libre END
    (28) iteration -> WHILE expression . DO statement_libre END
    (29) iteration -> WHILE expression . NEWLINE statement_libre END
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    DO              shift and go to state 91
    NEWLINE         shift and go to state 92
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 46

    (17) selection -> UNLESS expression . THEN statements_suite END
    (18) selection -> UNLESS expression . THEN statements_suite ELSE statements_suite END
    (21) selection -> UNLESS expression . THEN statement_libre END
    (22) selection -> UNLESS expression . THEN statement_libre ELSE statement_libre END
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    THEN            shift and go to state 93
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 47

    (5) statement -> statement_libre NEWLINE .

    END             reduce using rule 5 (statement -> statement_libre NEWLINE .)
    NEWLINE         reduce using rule 5 (statement -> statement_libre NEWLINE .)
    IF              reduce using rule 5 (statement -> statement_libre NEWLINE .)
    UNLESS          reduce using rule 5 (statement -> statement_libre NEWLINE .)
    WHILE           reduce using rule 5 (statement -> statement_libre NEWLINE .)
    FOR             reduce using rule 5 (statement -> statement_libre NEWLINE .)
    BREAK           reduce using rule 5 (statement -> statement_libre NEWLINE .)
    NEXT            reduce using rule 5 (statement -> statement_libre NEWLINE .)
    RETURN          reduce using rule 5 (statement -> statement_libre NEWLINE .)
    REQUIRE         reduce using rule 5 (statement -> statement_libre NEWLINE .)
    INCLUDE         reduce using rule 5 (statement -> statement_libre NEWLINE .)
    MIN             reduce using rule 5 (statement -> statement_libre NEWLINE .)
    NOT             reduce using rule 5 (statement -> statement_libre NEWLINE .)
    LEFT_CB         reduce using rule 5 (statement -> statement_libre NEWLINE .)
    LEFT_SB         reduce using rule 5 (statement -> statement_libre NEWLINE .)
    LEFT_PAR        reduce using rule 5 (statement -> statement_libre NEWLINE .)
    INT             reduce using rule 5 (statement -> statement_libre NEWLINE .)
    ID              reduce using rule 5 (statement -> statement_libre NEWLINE .)
    FLOAT           reduce using rule 5 (statement -> statement_libre NEWLINE .)
    TRUE            reduce using rule 5 (statement -> statement_libre NEWLINE .)
    FALSE           reduce using rule 5 (statement -> statement_libre NEWLINE .)
    NIL             reduce using rule 5 (statement -> statement_libre NEWLINE .)
    STRING          reduce using rule 5 (statement -> statement_libre NEWLINE .)
    MODULE          reduce using rule 5 (statement -> statement_libre NEWLINE .)
    DEF             reduce using rule 5 (statement -> statement_libre NEWLINE .)
    CLASS           reduce using rule 5 (statement -> statement_libre NEWLINE .)
    $end            reduce using rule 5 (statement -> statement_libre NEWLINE .)
    ELSE            reduce using rule 5 (statement -> statement_libre NEWLINE .)


state 48

    (84) definition -> DEF ID . LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> DEF ID . LEFT_PAR RIGHT_PAR statements_suite END

    LEFT_PAR        shift and go to state 94


state 49

    (90) declaration -> CLASS ID . LT ID statements_suite END
    (91) declaration -> CLASS ID . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    LT              shift and go to state 95
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 96
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 50

    (25) iteration -> FOR ID . IN expression DO statements_suite END
    (26) iteration -> FOR ID . IN expression NEWLINE statements_suite END

    IN              shift and go to state 97


state 51

    (83) modulation -> MODULE ID . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 98
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 52

    (35) interfiles -> INCLUDE ID .

    NEWLINE         reduce using rule 35 (interfiles -> INCLUDE ID .)
    END             reduce using rule 35 (interfiles -> INCLUDE ID .)
    ELSE            reduce using rule 35 (interfiles -> INCLUDE ID .)


state 53

    (43) affectation -> ID POW_AFF . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 99

state 54

    (41) affectation -> ID DIV_INT_AFF . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 100

state 55

    (38) affectation -> ID MIN_AFF . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 101

state 56

    (39) affectation -> ID MUL_AFF . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 102

state 57

    (40) affectation -> ID DIV_AFF . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 103

state 58

    (42) affectation -> ID MOD_AFF . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 104

state 59

    (36) affectation -> ID AFFECT . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 105

state 60

    (37) affectation -> ID ADD_AFF . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 106

state 61

    (69) expressions_key_suite -> expression_key .

    RIGHT_CB        reduce using rule 69 (expressions_key_suite -> expression_key .)
    COMMA           reduce using rule 69 (expressions_key_suite -> expression_key .)


state 62

    (67) expression -> LEFT_CB RIGHT_CB .

    LEFT_PAR        reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    ADD             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    MIN             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    DIV             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    MUL             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    POW             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    MOD             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    DIV_INT         reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    AND             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    OR              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    EQ              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    NE              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    LT              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    LE              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    GT              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    GE              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    IN              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    DOT             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    LSHIFT          reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    END             reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    NEWLINE         reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    THEN            reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    ELSE            reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    RIGHT_SB        reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    COMMA           reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    DO              reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    RIGHT_PAR       reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)
    RIGHT_CB        reduce using rule 67 (expression -> LEFT_CB RIGHT_CB .)


state 63

    (70) expression_key -> ID . KEY_OP expression

    KEY_OP          shift and go to state 107


state 64

    (66) expression -> LEFT_CB expressions_key_suite . RIGHT_CB
    (68) expressions_key_suite -> expressions_key_suite . COMMA expression_key

    RIGHT_CB        shift and go to state 108
    COMMA           shift and go to state 109


state 65

    (15) selection -> IF expression . THEN statements_suite END
    (16) selection -> IF expression . THEN statements_suite ELSE statements_suite END
    (19) selection -> IF expression . THEN statement_libre END
    (20) selection -> IF expression . THEN statement_libre ELSE statement_libre END
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    THEN            shift and go to state 110
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 66

    (64) expression -> MIN expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    LEFT_PAR        reduce using rule 64 (expression -> MIN expression .)
    ADD             reduce using rule 64 (expression -> MIN expression .)
    MIN             reduce using rule 64 (expression -> MIN expression .)
    DIV             reduce using rule 64 (expression -> MIN expression .)
    MUL             reduce using rule 64 (expression -> MIN expression .)
    POW             reduce using rule 64 (expression -> MIN expression .)
    MOD             reduce using rule 64 (expression -> MIN expression .)
    DIV_INT         reduce using rule 64 (expression -> MIN expression .)
    AND             reduce using rule 64 (expression -> MIN expression .)
    OR              reduce using rule 64 (expression -> MIN expression .)
    EQ              reduce using rule 64 (expression -> MIN expression .)
    NE              reduce using rule 64 (expression -> MIN expression .)
    LT              reduce using rule 64 (expression -> MIN expression .)
    LE              reduce using rule 64 (expression -> MIN expression .)
    GT              reduce using rule 64 (expression -> MIN expression .)
    GE              reduce using rule 64 (expression -> MIN expression .)
    IN              reduce using rule 64 (expression -> MIN expression .)
    LSHIFT          reduce using rule 64 (expression -> MIN expression .)
    END             reduce using rule 64 (expression -> MIN expression .)
    NEWLINE         reduce using rule 64 (expression -> MIN expression .)
    THEN            reduce using rule 64 (expression -> MIN expression .)
    ELSE            reduce using rule 64 (expression -> MIN expression .)
    RIGHT_SB        reduce using rule 64 (expression -> MIN expression .)
    COMMA           reduce using rule 64 (expression -> MIN expression .)
    DO              reduce using rule 64 (expression -> MIN expression .)
    RIGHT_PAR       reduce using rule 64 (expression -> MIN expression .)
    RIGHT_CB        reduce using rule 64 (expression -> MIN expression .)
    DOT             shift and go to state 74

  ! DOT             [ reduce using rule 64 (expression -> MIN expression .) ]
  ! LEFT_PAR        [ shift and go to state 86 ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 73 ]
  ! MUL             [ shift and go to state 72 ]
  ! POW             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 88 ]
  ! DIV_INT         [ shift and go to state 75 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 67

    (75) expression -> LEFT_PAR expression . RIGHT_PAR
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    RIGHT_PAR       shift and go to state 111
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 68

    (65) expression -> NOT expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    LEFT_PAR        reduce using rule 65 (expression -> NOT expression .)
    ADD             reduce using rule 65 (expression -> NOT expression .)
    MIN             reduce using rule 65 (expression -> NOT expression .)
    DIV             reduce using rule 65 (expression -> NOT expression .)
    MUL             reduce using rule 65 (expression -> NOT expression .)
    POW             reduce using rule 65 (expression -> NOT expression .)
    MOD             reduce using rule 65 (expression -> NOT expression .)
    DIV_INT         reduce using rule 65 (expression -> NOT expression .)
    AND             reduce using rule 65 (expression -> NOT expression .)
    OR              reduce using rule 65 (expression -> NOT expression .)
    EQ              reduce using rule 65 (expression -> NOT expression .)
    NE              reduce using rule 65 (expression -> NOT expression .)
    LT              reduce using rule 65 (expression -> NOT expression .)
    LE              reduce using rule 65 (expression -> NOT expression .)
    GT              reduce using rule 65 (expression -> NOT expression .)
    GE              reduce using rule 65 (expression -> NOT expression .)
    IN              reduce using rule 65 (expression -> NOT expression .)
    LSHIFT          reduce using rule 65 (expression -> NOT expression .)
    END             reduce using rule 65 (expression -> NOT expression .)
    NEWLINE         reduce using rule 65 (expression -> NOT expression .)
    THEN            reduce using rule 65 (expression -> NOT expression .)
    ELSE            reduce using rule 65 (expression -> NOT expression .)
    RIGHT_SB        reduce using rule 65 (expression -> NOT expression .)
    COMMA           reduce using rule 65 (expression -> NOT expression .)
    DO              reduce using rule 65 (expression -> NOT expression .)
    RIGHT_PAR       reduce using rule 65 (expression -> NOT expression .)
    RIGHT_CB        reduce using rule 65 (expression -> NOT expression .)
    DOT             shift and go to state 74

  ! DOT             [ reduce using rule 65 (expression -> NOT expression .) ]
  ! LEFT_PAR        [ shift and go to state 86 ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 73 ]
  ! MUL             [ shift and go to state 72 ]
  ! POW             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 88 ]
  ! DIV_INT         [ shift and go to state 75 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 69

    (2) statements_suite -> statements_suite statement .

    END             reduce using rule 2 (statements_suite -> statements_suite statement .)
    NEWLINE         reduce using rule 2 (statements_suite -> statements_suite statement .)
    IF              reduce using rule 2 (statements_suite -> statements_suite statement .)
    UNLESS          reduce using rule 2 (statements_suite -> statements_suite statement .)
    WHILE           reduce using rule 2 (statements_suite -> statements_suite statement .)
    FOR             reduce using rule 2 (statements_suite -> statements_suite statement .)
    BREAK           reduce using rule 2 (statements_suite -> statements_suite statement .)
    NEXT            reduce using rule 2 (statements_suite -> statements_suite statement .)
    RETURN          reduce using rule 2 (statements_suite -> statements_suite statement .)
    REQUIRE         reduce using rule 2 (statements_suite -> statements_suite statement .)
    INCLUDE         reduce using rule 2 (statements_suite -> statements_suite statement .)
    MIN             reduce using rule 2 (statements_suite -> statements_suite statement .)
    NOT             reduce using rule 2 (statements_suite -> statements_suite statement .)
    LEFT_CB         reduce using rule 2 (statements_suite -> statements_suite statement .)
    LEFT_SB         reduce using rule 2 (statements_suite -> statements_suite statement .)
    LEFT_PAR        reduce using rule 2 (statements_suite -> statements_suite statement .)
    INT             reduce using rule 2 (statements_suite -> statements_suite statement .)
    ID              reduce using rule 2 (statements_suite -> statements_suite statement .)
    FLOAT           reduce using rule 2 (statements_suite -> statements_suite statement .)
    TRUE            reduce using rule 2 (statements_suite -> statements_suite statement .)
    FALSE           reduce using rule 2 (statements_suite -> statements_suite statement .)
    NIL             reduce using rule 2 (statements_suite -> statements_suite statement .)
    STRING          reduce using rule 2 (statements_suite -> statements_suite statement .)
    MODULE          reduce using rule 2 (statements_suite -> statements_suite statement .)
    DEF             reduce using rule 2 (statements_suite -> statements_suite statement .)
    CLASS           reduce using rule 2 (statements_suite -> statements_suite statement .)
    ELSE            reduce using rule 2 (statements_suite -> statements_suite statement .)
    $end            reduce using rule 2 (statements_suite -> statements_suite statement .)


state 70

    (47) expression -> expression MIN . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 112

state 71

    (63) expression -> expression LSHIFT . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 113

state 72

    (49) expression -> expression MUL . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 114

state 73

    (48) expression -> expression DIV . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 115

state 74

    (62) expression -> expression DOT . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 116

state 75

    (52) expression -> expression DIV_INT . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 117

state 76

    (58) expression -> expression LE . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 118

state 77

    (50) expression -> expression POW . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 119

state 78

    (56) expression -> expression NE . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 120

state 79

    (57) expression -> expression LT . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 121

state 80

    (59) expression -> expression GT . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 122

state 81

    (60) expression -> expression GE . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 123

state 82

    (61) expression -> expression IN . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 124

state 83

    (55) expression -> expression EQ . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 125

state 84

    (53) expression -> expression AND . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 126

state 85

    (46) expression -> expression ADD . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 127

state 86

    (44) expression -> expression LEFT_PAR . expressions_suite RIGHT_PAR
    (45) expression -> expression LEFT_PAR . RIGHT_PAR
    (73) expressions_suite -> . expressions_suite COMMA expression
    (74) expressions_suite -> . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    RIGHT_PAR       shift and go to state 128
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expressions_suite              shift and go to state 129
    expression                     shift and go to state 44

state 87

    (54) expression -> expression OR . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 130

state 88

    (51) expression -> expression MOD . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 131

state 89

    (73) expressions_suite -> expressions_suite COMMA . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 132

state 90

    (71) expression -> LEFT_SB expressions_suite RIGHT_SB .

    LEFT_PAR        reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    ADD             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    MIN             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    DIV             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    MUL             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    POW             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    MOD             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    DIV_INT         reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    AND             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    OR              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    EQ              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    NE              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    LT              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    LE              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    GT              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    GE              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    IN              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    DOT             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    LSHIFT          reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    END             reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    NEWLINE         reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    THEN            reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    ELSE            reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    RIGHT_SB        reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    COMMA           reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    DO              reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    RIGHT_PAR       reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)
    RIGHT_CB        reduce using rule 71 (expression -> LEFT_SB expressions_suite RIGHT_SB .)


state 91

    (23) iteration -> WHILE expression DO . NEWLINE statements_suite END
    (27) iteration -> WHILE expression DO . NEWLINE statement_libre END
    (28) iteration -> WHILE expression DO . statement_libre END
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 134
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 133

state 92

    (24) iteration -> WHILE expression NEWLINE . statements_suite END
    (29) iteration -> WHILE expression NEWLINE . statement_libre END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 136
    expression                     shift and go to state 38
    statement_libre                shift and go to state 135

state 93

    (17) selection -> UNLESS expression THEN . statements_suite END
    (18) selection -> UNLESS expression THEN . statements_suite ELSE statements_suite END
    (21) selection -> UNLESS expression THEN . statement_libre END
    (22) selection -> UNLESS expression THEN . statement_libre ELSE statement_libre END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 138
    expression                     shift and go to state 38
    statement_libre                shift and go to state 137

state 94

    (84) definition -> DEF ID LEFT_PAR . parameters RIGHT_PAR statements_suite END
    (85) definition -> DEF ID LEFT_PAR . RIGHT_PAR statements_suite END
    (86) parameters -> . parameters COMMA parameter
    (87) parameters -> . parameter
    (88) parameter -> . ID ID
    (89) parameter -> . ID

    RIGHT_PAR       shift and go to state 140
    ID              shift and go to state 142

    parameter                      shift and go to state 141
    parameters                     shift and go to state 139

state 95

    (90) declaration -> CLASS ID LT . ID statements_suite END

    ID              shift and go to state 143


state 96

    (91) declaration -> CLASS ID statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 144
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 97

    (25) iteration -> FOR ID IN . expression DO statements_suite END
    (26) iteration -> FOR ID IN . expression NEWLINE statements_suite END
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 145

state 98

    (83) modulation -> MODULE ID statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 146
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 99

    (43) affectation -> ID POW_AFF expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 43 (affectation -> ID POW_AFF expression .)
    END             reduce using rule 43 (affectation -> ID POW_AFF expression .)
    ELSE            reduce using rule 43 (affectation -> ID POW_AFF expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 100

    (41) affectation -> ID DIV_INT_AFF expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 41 (affectation -> ID DIV_INT_AFF expression .)
    END             reduce using rule 41 (affectation -> ID DIV_INT_AFF expression .)
    ELSE            reduce using rule 41 (affectation -> ID DIV_INT_AFF expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 101

    (38) affectation -> ID MIN_AFF expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 38 (affectation -> ID MIN_AFF expression .)
    END             reduce using rule 38 (affectation -> ID MIN_AFF expression .)
    ELSE            reduce using rule 38 (affectation -> ID MIN_AFF expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 102

    (39) affectation -> ID MUL_AFF expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 39 (affectation -> ID MUL_AFF expression .)
    END             reduce using rule 39 (affectation -> ID MUL_AFF expression .)
    ELSE            reduce using rule 39 (affectation -> ID MUL_AFF expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 103

    (40) affectation -> ID DIV_AFF expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 40 (affectation -> ID DIV_AFF expression .)
    END             reduce using rule 40 (affectation -> ID DIV_AFF expression .)
    ELSE            reduce using rule 40 (affectation -> ID DIV_AFF expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 104

    (42) affectation -> ID MOD_AFF expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 42 (affectation -> ID MOD_AFF expression .)
    END             reduce using rule 42 (affectation -> ID MOD_AFF expression .)
    ELSE            reduce using rule 42 (affectation -> ID MOD_AFF expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 105

    (36) affectation -> ID AFFECT expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 36 (affectation -> ID AFFECT expression .)
    END             reduce using rule 36 (affectation -> ID AFFECT expression .)
    ELSE            reduce using rule 36 (affectation -> ID AFFECT expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 106

    (37) affectation -> ID ADD_AFF expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    NEWLINE         reduce using rule 37 (affectation -> ID ADD_AFF expression .)
    END             reduce using rule 37 (affectation -> ID ADD_AFF expression .)
    ELSE            reduce using rule 37 (affectation -> ID ADD_AFF expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 107

    (70) expression_key -> ID KEY_OP . expression
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING

    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 39
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18

    expression                     shift and go to state 147

state 108

    (66) expression -> LEFT_CB expressions_key_suite RIGHT_CB .

    LEFT_PAR        reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    ADD             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    MIN             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    DIV             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    MUL             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    POW             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    MOD             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    DIV_INT         reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    AND             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    OR              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    EQ              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    NE              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    LT              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    LE              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    GT              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    GE              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    IN              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    DOT             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    LSHIFT          reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    END             reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    NEWLINE         reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    THEN            reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    ELSE            reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    RIGHT_SB        reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    COMMA           reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    DO              reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    RIGHT_PAR       reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)
    RIGHT_CB        reduce using rule 66 (expression -> LEFT_CB expressions_key_suite RIGHT_CB .)


state 109

    (68) expressions_key_suite -> expressions_key_suite COMMA . expression_key
    (70) expression_key -> . ID KEY_OP expression

    ID              shift and go to state 63

    expression_key                 shift and go to state 148

state 110

    (15) selection -> IF expression THEN . statements_suite END
    (16) selection -> IF expression THEN . statements_suite ELSE statements_suite END
    (19) selection -> IF expression THEN . statement_libre END
    (20) selection -> IF expression THEN . statement_libre ELSE statement_libre END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 150
    expression                     shift and go to state 38
    statement_libre                shift and go to state 149

state 111

    (75) expression -> LEFT_PAR expression RIGHT_PAR .

    LEFT_PAR        reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    ADD             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    MIN             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    DIV             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    MUL             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    POW             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    MOD             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    DIV_INT         reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    AND             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    OR              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    EQ              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    NE              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LT              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LE              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    GT              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    GE              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    IN              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    DOT             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LSHIFT          reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    END             reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    NEWLINE         reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    THEN            reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    ELSE            reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    RIGHT_SB        reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    COMMA           reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    DO              reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    RIGHT_PAR       reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)
    RIGHT_CB        reduce using rule 75 (expression -> LEFT_PAR expression RIGHT_PAR .)


state 112

    (47) expression -> expression MIN expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    ADD             reduce using rule 47 (expression -> expression MIN expression .)
    MIN             reduce using rule 47 (expression -> expression MIN expression .)
    AND             reduce using rule 47 (expression -> expression MIN expression .)
    OR              reduce using rule 47 (expression -> expression MIN expression .)
    EQ              reduce using rule 47 (expression -> expression MIN expression .)
    NE              reduce using rule 47 (expression -> expression MIN expression .)
    LT              reduce using rule 47 (expression -> expression MIN expression .)
    LE              reduce using rule 47 (expression -> expression MIN expression .)
    GT              reduce using rule 47 (expression -> expression MIN expression .)
    GE              reduce using rule 47 (expression -> expression MIN expression .)
    IN              reduce using rule 47 (expression -> expression MIN expression .)
    LSHIFT          reduce using rule 47 (expression -> expression MIN expression .)
    END             reduce using rule 47 (expression -> expression MIN expression .)
    NEWLINE         reduce using rule 47 (expression -> expression MIN expression .)
    THEN            reduce using rule 47 (expression -> expression MIN expression .)
    ELSE            reduce using rule 47 (expression -> expression MIN expression .)
    RIGHT_SB        reduce using rule 47 (expression -> expression MIN expression .)
    COMMA           reduce using rule 47 (expression -> expression MIN expression .)
    DO              reduce using rule 47 (expression -> expression MIN expression .)
    RIGHT_PAR       reduce using rule 47 (expression -> expression MIN expression .)
    RIGHT_CB        reduce using rule 47 (expression -> expression MIN expression .)
    LEFT_PAR        shift and go to state 86
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    DOT             shift and go to state 74

  ! LEFT_PAR        [ reduce using rule 47 (expression -> expression MIN expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression MIN expression .) ]
  ! MUL             [ reduce using rule 47 (expression -> expression MIN expression .) ]
  ! POW             [ reduce using rule 47 (expression -> expression MIN expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> expression MIN expression .) ]
  ! DIV_INT         [ reduce using rule 47 (expression -> expression MIN expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> expression MIN expression .) ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 113

    (63) expression -> expression LSHIFT expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    ADD             reduce using rule 63 (expression -> expression LSHIFT expression .)
    MIN             reduce using rule 63 (expression -> expression LSHIFT expression .)
    AND             reduce using rule 63 (expression -> expression LSHIFT expression .)
    OR              reduce using rule 63 (expression -> expression LSHIFT expression .)
    EQ              reduce using rule 63 (expression -> expression LSHIFT expression .)
    NE              reduce using rule 63 (expression -> expression LSHIFT expression .)
    LT              reduce using rule 63 (expression -> expression LSHIFT expression .)
    LE              reduce using rule 63 (expression -> expression LSHIFT expression .)
    GT              reduce using rule 63 (expression -> expression LSHIFT expression .)
    GE              reduce using rule 63 (expression -> expression LSHIFT expression .)
    IN              reduce using rule 63 (expression -> expression LSHIFT expression .)
    LSHIFT          reduce using rule 63 (expression -> expression LSHIFT expression .)
    END             reduce using rule 63 (expression -> expression LSHIFT expression .)
    NEWLINE         reduce using rule 63 (expression -> expression LSHIFT expression .)
    THEN            reduce using rule 63 (expression -> expression LSHIFT expression .)
    ELSE            reduce using rule 63 (expression -> expression LSHIFT expression .)
    RIGHT_SB        reduce using rule 63 (expression -> expression LSHIFT expression .)
    COMMA           reduce using rule 63 (expression -> expression LSHIFT expression .)
    DO              reduce using rule 63 (expression -> expression LSHIFT expression .)
    RIGHT_PAR       reduce using rule 63 (expression -> expression LSHIFT expression .)
    RIGHT_CB        reduce using rule 63 (expression -> expression LSHIFT expression .)
    LEFT_PAR        shift and go to state 86
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    DOT             shift and go to state 74

  ! LEFT_PAR        [ reduce using rule 63 (expression -> expression LSHIFT expression .) ]
  ! DIV             [ reduce using rule 63 (expression -> expression LSHIFT expression .) ]
  ! MUL             [ reduce using rule 63 (expression -> expression LSHIFT expression .) ]
  ! POW             [ reduce using rule 63 (expression -> expression LSHIFT expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> expression LSHIFT expression .) ]
  ! DIV_INT         [ reduce using rule 63 (expression -> expression LSHIFT expression .) ]
  ! DOT             [ reduce using rule 63 (expression -> expression LSHIFT expression .) ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 114

    (49) expression -> expression MUL expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    ADD             reduce using rule 49 (expression -> expression MUL expression .)
    MIN             reduce using rule 49 (expression -> expression MUL expression .)
    DIV             reduce using rule 49 (expression -> expression MUL expression .)
    MUL             reduce using rule 49 (expression -> expression MUL expression .)
    DIV_INT         reduce using rule 49 (expression -> expression MUL expression .)
    AND             reduce using rule 49 (expression -> expression MUL expression .)
    OR              reduce using rule 49 (expression -> expression MUL expression .)
    EQ              reduce using rule 49 (expression -> expression MUL expression .)
    NE              reduce using rule 49 (expression -> expression MUL expression .)
    LT              reduce using rule 49 (expression -> expression MUL expression .)
    LE              reduce using rule 49 (expression -> expression MUL expression .)
    GT              reduce using rule 49 (expression -> expression MUL expression .)
    GE              reduce using rule 49 (expression -> expression MUL expression .)
    IN              reduce using rule 49 (expression -> expression MUL expression .)
    LSHIFT          reduce using rule 49 (expression -> expression MUL expression .)
    END             reduce using rule 49 (expression -> expression MUL expression .)
    NEWLINE         reduce using rule 49 (expression -> expression MUL expression .)
    THEN            reduce using rule 49 (expression -> expression MUL expression .)
    ELSE            reduce using rule 49 (expression -> expression MUL expression .)
    RIGHT_SB        reduce using rule 49 (expression -> expression MUL expression .)
    COMMA           reduce using rule 49 (expression -> expression MUL expression .)
    DO              reduce using rule 49 (expression -> expression MUL expression .)
    RIGHT_PAR       reduce using rule 49 (expression -> expression MUL expression .)
    RIGHT_CB        reduce using rule 49 (expression -> expression MUL expression .)
    LEFT_PAR        shift and go to state 86
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DOT             shift and go to state 74

  ! LEFT_PAR        [ reduce using rule 49 (expression -> expression MUL expression .) ]
  ! POW             [ reduce using rule 49 (expression -> expression MUL expression .) ]
  ! MOD             [ reduce using rule 49 (expression -> expression MUL expression .) ]
  ! DOT             [ reduce using rule 49 (expression -> expression MUL expression .) ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 73 ]
  ! MUL             [ shift and go to state 72 ]
  ! DIV_INT         [ shift and go to state 75 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 115

    (48) expression -> expression DIV expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    ADD             reduce using rule 48 (expression -> expression DIV expression .)
    MIN             reduce using rule 48 (expression -> expression DIV expression .)
    DIV             reduce using rule 48 (expression -> expression DIV expression .)
    MUL             reduce using rule 48 (expression -> expression DIV expression .)
    DIV_INT         reduce using rule 48 (expression -> expression DIV expression .)
    AND             reduce using rule 48 (expression -> expression DIV expression .)
    OR              reduce using rule 48 (expression -> expression DIV expression .)
    EQ              reduce using rule 48 (expression -> expression DIV expression .)
    NE              reduce using rule 48 (expression -> expression DIV expression .)
    LT              reduce using rule 48 (expression -> expression DIV expression .)
    LE              reduce using rule 48 (expression -> expression DIV expression .)
    GT              reduce using rule 48 (expression -> expression DIV expression .)
    GE              reduce using rule 48 (expression -> expression DIV expression .)
    IN              reduce using rule 48 (expression -> expression DIV expression .)
    LSHIFT          reduce using rule 48 (expression -> expression DIV expression .)
    END             reduce using rule 48 (expression -> expression DIV expression .)
    NEWLINE         reduce using rule 48 (expression -> expression DIV expression .)
    THEN            reduce using rule 48 (expression -> expression DIV expression .)
    ELSE            reduce using rule 48 (expression -> expression DIV expression .)
    RIGHT_SB        reduce using rule 48 (expression -> expression DIV expression .)
    COMMA           reduce using rule 48 (expression -> expression DIV expression .)
    DO              reduce using rule 48 (expression -> expression DIV expression .)
    RIGHT_PAR       reduce using rule 48 (expression -> expression DIV expression .)
    RIGHT_CB        reduce using rule 48 (expression -> expression DIV expression .)
    LEFT_PAR        shift and go to state 86
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DOT             shift and go to state 74

  ! LEFT_PAR        [ reduce using rule 48 (expression -> expression DIV expression .) ]
  ! POW             [ reduce using rule 48 (expression -> expression DIV expression .) ]
  ! MOD             [ reduce using rule 48 (expression -> expression DIV expression .) ]
  ! DOT             [ reduce using rule 48 (expression -> expression DIV expression .) ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 73 ]
  ! MUL             [ shift and go to state 72 ]
  ! DIV_INT         [ shift and go to state 75 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 116

    (62) expression -> expression DOT expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    LEFT_PAR        reduce using rule 62 (expression -> expression DOT expression .)
    ADD             reduce using rule 62 (expression -> expression DOT expression .)
    MIN             reduce using rule 62 (expression -> expression DOT expression .)
    DIV             reduce using rule 62 (expression -> expression DOT expression .)
    MUL             reduce using rule 62 (expression -> expression DOT expression .)
    POW             reduce using rule 62 (expression -> expression DOT expression .)
    MOD             reduce using rule 62 (expression -> expression DOT expression .)
    DIV_INT         reduce using rule 62 (expression -> expression DOT expression .)
    AND             reduce using rule 62 (expression -> expression DOT expression .)
    OR              reduce using rule 62 (expression -> expression DOT expression .)
    EQ              reduce using rule 62 (expression -> expression DOT expression .)
    NE              reduce using rule 62 (expression -> expression DOT expression .)
    LT              reduce using rule 62 (expression -> expression DOT expression .)
    LE              reduce using rule 62 (expression -> expression DOT expression .)
    GT              reduce using rule 62 (expression -> expression DOT expression .)
    GE              reduce using rule 62 (expression -> expression DOT expression .)
    IN              reduce using rule 62 (expression -> expression DOT expression .)
    DOT             reduce using rule 62 (expression -> expression DOT expression .)
    LSHIFT          reduce using rule 62 (expression -> expression DOT expression .)
    END             reduce using rule 62 (expression -> expression DOT expression .)
    NEWLINE         reduce using rule 62 (expression -> expression DOT expression .)
    THEN            reduce using rule 62 (expression -> expression DOT expression .)
    ELSE            reduce using rule 62 (expression -> expression DOT expression .)
    RIGHT_SB        reduce using rule 62 (expression -> expression DOT expression .)
    COMMA           reduce using rule 62 (expression -> expression DOT expression .)
    DO              reduce using rule 62 (expression -> expression DOT expression .)
    RIGHT_PAR       reduce using rule 62 (expression -> expression DOT expression .)
    RIGHT_CB        reduce using rule 62 (expression -> expression DOT expression .)

  ! LEFT_PAR        [ shift and go to state 86 ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 73 ]
  ! MUL             [ shift and go to state 72 ]
  ! POW             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 88 ]
  ! DIV_INT         [ shift and go to state 75 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! DOT             [ shift and go to state 74 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 117

    (52) expression -> expression DIV_INT expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    ADD             reduce using rule 52 (expression -> expression DIV_INT expression .)
    MIN             reduce using rule 52 (expression -> expression DIV_INT expression .)
    DIV             reduce using rule 52 (expression -> expression DIV_INT expression .)
    MUL             reduce using rule 52 (expression -> expression DIV_INT expression .)
    DIV_INT         reduce using rule 52 (expression -> expression DIV_INT expression .)
    AND             reduce using rule 52 (expression -> expression DIV_INT expression .)
    OR              reduce using rule 52 (expression -> expression DIV_INT expression .)
    EQ              reduce using rule 52 (expression -> expression DIV_INT expression .)
    NE              reduce using rule 52 (expression -> expression DIV_INT expression .)
    LT              reduce using rule 52 (expression -> expression DIV_INT expression .)
    LE              reduce using rule 52 (expression -> expression DIV_INT expression .)
    GT              reduce using rule 52 (expression -> expression DIV_INT expression .)
    GE              reduce using rule 52 (expression -> expression DIV_INT expression .)
    IN              reduce using rule 52 (expression -> expression DIV_INT expression .)
    LSHIFT          reduce using rule 52 (expression -> expression DIV_INT expression .)
    END             reduce using rule 52 (expression -> expression DIV_INT expression .)
    NEWLINE         reduce using rule 52 (expression -> expression DIV_INT expression .)
    THEN            reduce using rule 52 (expression -> expression DIV_INT expression .)
    ELSE            reduce using rule 52 (expression -> expression DIV_INT expression .)
    RIGHT_SB        reduce using rule 52 (expression -> expression DIV_INT expression .)
    COMMA           reduce using rule 52 (expression -> expression DIV_INT expression .)
    DO              reduce using rule 52 (expression -> expression DIV_INT expression .)
    RIGHT_PAR       reduce using rule 52 (expression -> expression DIV_INT expression .)
    RIGHT_CB        reduce using rule 52 (expression -> expression DIV_INT expression .)
    LEFT_PAR        shift and go to state 86
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DOT             shift and go to state 74

  ! LEFT_PAR        [ reduce using rule 52 (expression -> expression DIV_INT expression .) ]
  ! POW             [ reduce using rule 52 (expression -> expression DIV_INT expression .) ]
  ! MOD             [ reduce using rule 52 (expression -> expression DIV_INT expression .) ]
  ! DOT             [ reduce using rule 52 (expression -> expression DIV_INT expression .) ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 73 ]
  ! MUL             [ shift and go to state 72 ]
  ! DIV_INT         [ shift and go to state 75 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 118

    (58) expression -> expression LE expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 58 (expression -> expression LE expression .)
    OR              reduce using rule 58 (expression -> expression LE expression .)
    EQ              reduce using rule 58 (expression -> expression LE expression .)
    NE              reduce using rule 58 (expression -> expression LE expression .)
    LT              reduce using rule 58 (expression -> expression LE expression .)
    LE              reduce using rule 58 (expression -> expression LE expression .)
    GT              reduce using rule 58 (expression -> expression LE expression .)
    GE              reduce using rule 58 (expression -> expression LE expression .)
    IN              reduce using rule 58 (expression -> expression LE expression .)
    END             reduce using rule 58 (expression -> expression LE expression .)
    NEWLINE         reduce using rule 58 (expression -> expression LE expression .)
    THEN            reduce using rule 58 (expression -> expression LE expression .)
    ELSE            reduce using rule 58 (expression -> expression LE expression .)
    RIGHT_SB        reduce using rule 58 (expression -> expression LE expression .)
    COMMA           reduce using rule 58 (expression -> expression LE expression .)
    DO              reduce using rule 58 (expression -> expression LE expression .)
    RIGHT_PAR       reduce using rule 58 (expression -> expression LE expression .)
    RIGHT_CB        reduce using rule 58 (expression -> expression LE expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! ADD             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MIN             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MUL             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! POW             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! DIV_INT         [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! DOT             [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! LSHIFT          [ reduce using rule 58 (expression -> expression LE expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]


state 119

    (50) expression -> expression POW expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    ADD             reduce using rule 50 (expression -> expression POW expression .)
    MIN             reduce using rule 50 (expression -> expression POW expression .)
    DIV             reduce using rule 50 (expression -> expression POW expression .)
    MUL             reduce using rule 50 (expression -> expression POW expression .)
    POW             reduce using rule 50 (expression -> expression POW expression .)
    MOD             reduce using rule 50 (expression -> expression POW expression .)
    DIV_INT         reduce using rule 50 (expression -> expression POW expression .)
    AND             reduce using rule 50 (expression -> expression POW expression .)
    OR              reduce using rule 50 (expression -> expression POW expression .)
    EQ              reduce using rule 50 (expression -> expression POW expression .)
    NE              reduce using rule 50 (expression -> expression POW expression .)
    LT              reduce using rule 50 (expression -> expression POW expression .)
    LE              reduce using rule 50 (expression -> expression POW expression .)
    GT              reduce using rule 50 (expression -> expression POW expression .)
    GE              reduce using rule 50 (expression -> expression POW expression .)
    IN              reduce using rule 50 (expression -> expression POW expression .)
    LSHIFT          reduce using rule 50 (expression -> expression POW expression .)
    END             reduce using rule 50 (expression -> expression POW expression .)
    NEWLINE         reduce using rule 50 (expression -> expression POW expression .)
    THEN            reduce using rule 50 (expression -> expression POW expression .)
    ELSE            reduce using rule 50 (expression -> expression POW expression .)
    RIGHT_SB        reduce using rule 50 (expression -> expression POW expression .)
    COMMA           reduce using rule 50 (expression -> expression POW expression .)
    DO              reduce using rule 50 (expression -> expression POW expression .)
    RIGHT_PAR       reduce using rule 50 (expression -> expression POW expression .)
    RIGHT_CB        reduce using rule 50 (expression -> expression POW expression .)
    LEFT_PAR        shift and go to state 86
    DOT             shift and go to state 74

  ! LEFT_PAR        [ reduce using rule 50 (expression -> expression POW expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> expression POW expression .) ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 73 ]
  ! MUL             [ shift and go to state 72 ]
  ! POW             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 88 ]
  ! DIV_INT         [ shift and go to state 75 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 120

    (56) expression -> expression NE expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 56 (expression -> expression NE expression .)
    OR              reduce using rule 56 (expression -> expression NE expression .)
    EQ              reduce using rule 56 (expression -> expression NE expression .)
    NE              reduce using rule 56 (expression -> expression NE expression .)
    IN              reduce using rule 56 (expression -> expression NE expression .)
    END             reduce using rule 56 (expression -> expression NE expression .)
    NEWLINE         reduce using rule 56 (expression -> expression NE expression .)
    THEN            reduce using rule 56 (expression -> expression NE expression .)
    ELSE            reduce using rule 56 (expression -> expression NE expression .)
    RIGHT_SB        reduce using rule 56 (expression -> expression NE expression .)
    COMMA           reduce using rule 56 (expression -> expression NE expression .)
    DO              reduce using rule 56 (expression -> expression NE expression .)
    RIGHT_PAR       reduce using rule 56 (expression -> expression NE expression .)
    RIGHT_CB        reduce using rule 56 (expression -> expression NE expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! ADD             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! MIN             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! MUL             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! POW             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! DIV_INT         [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! DOT             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! LSHIFT          [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! IN              [ shift and go to state 82 ]


state 121

    (57) expression -> expression LT expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 57 (expression -> expression LT expression .)
    OR              reduce using rule 57 (expression -> expression LT expression .)
    EQ              reduce using rule 57 (expression -> expression LT expression .)
    NE              reduce using rule 57 (expression -> expression LT expression .)
    LT              reduce using rule 57 (expression -> expression LT expression .)
    LE              reduce using rule 57 (expression -> expression LT expression .)
    GT              reduce using rule 57 (expression -> expression LT expression .)
    GE              reduce using rule 57 (expression -> expression LT expression .)
    IN              reduce using rule 57 (expression -> expression LT expression .)
    END             reduce using rule 57 (expression -> expression LT expression .)
    NEWLINE         reduce using rule 57 (expression -> expression LT expression .)
    THEN            reduce using rule 57 (expression -> expression LT expression .)
    ELSE            reduce using rule 57 (expression -> expression LT expression .)
    RIGHT_SB        reduce using rule 57 (expression -> expression LT expression .)
    COMMA           reduce using rule 57 (expression -> expression LT expression .)
    DO              reduce using rule 57 (expression -> expression LT expression .)
    RIGHT_PAR       reduce using rule 57 (expression -> expression LT expression .)
    RIGHT_CB        reduce using rule 57 (expression -> expression LT expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! ADD             [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! MIN             [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! MUL             [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! POW             [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! DIV_INT         [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! DOT             [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! LSHIFT          [ reduce using rule 57 (expression -> expression LT expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]


state 122

    (59) expression -> expression GT expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 59 (expression -> expression GT expression .)
    OR              reduce using rule 59 (expression -> expression GT expression .)
    EQ              reduce using rule 59 (expression -> expression GT expression .)
    NE              reduce using rule 59 (expression -> expression GT expression .)
    LT              reduce using rule 59 (expression -> expression GT expression .)
    LE              reduce using rule 59 (expression -> expression GT expression .)
    GT              reduce using rule 59 (expression -> expression GT expression .)
    GE              reduce using rule 59 (expression -> expression GT expression .)
    IN              reduce using rule 59 (expression -> expression GT expression .)
    END             reduce using rule 59 (expression -> expression GT expression .)
    NEWLINE         reduce using rule 59 (expression -> expression GT expression .)
    THEN            reduce using rule 59 (expression -> expression GT expression .)
    ELSE            reduce using rule 59 (expression -> expression GT expression .)
    RIGHT_SB        reduce using rule 59 (expression -> expression GT expression .)
    COMMA           reduce using rule 59 (expression -> expression GT expression .)
    DO              reduce using rule 59 (expression -> expression GT expression .)
    RIGHT_PAR       reduce using rule 59 (expression -> expression GT expression .)
    RIGHT_CB        reduce using rule 59 (expression -> expression GT expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! ADD             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MIN             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MUL             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! POW             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! DIV_INT         [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! DOT             [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! LSHIFT          [ reduce using rule 59 (expression -> expression GT expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]


state 123

    (60) expression -> expression GE expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 60 (expression -> expression GE expression .)
    OR              reduce using rule 60 (expression -> expression GE expression .)
    EQ              reduce using rule 60 (expression -> expression GE expression .)
    NE              reduce using rule 60 (expression -> expression GE expression .)
    LT              reduce using rule 60 (expression -> expression GE expression .)
    LE              reduce using rule 60 (expression -> expression GE expression .)
    GT              reduce using rule 60 (expression -> expression GE expression .)
    GE              reduce using rule 60 (expression -> expression GE expression .)
    IN              reduce using rule 60 (expression -> expression GE expression .)
    END             reduce using rule 60 (expression -> expression GE expression .)
    NEWLINE         reduce using rule 60 (expression -> expression GE expression .)
    THEN            reduce using rule 60 (expression -> expression GE expression .)
    ELSE            reduce using rule 60 (expression -> expression GE expression .)
    RIGHT_SB        reduce using rule 60 (expression -> expression GE expression .)
    COMMA           reduce using rule 60 (expression -> expression GE expression .)
    DO              reduce using rule 60 (expression -> expression GE expression .)
    RIGHT_PAR       reduce using rule 60 (expression -> expression GE expression .)
    RIGHT_CB        reduce using rule 60 (expression -> expression GE expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! ADD             [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! MIN             [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! MUL             [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! POW             [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! DIV_INT         [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! DOT             [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! LSHIFT          [ reduce using rule 60 (expression -> expression GE expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]


state 124

    (61) expression -> expression IN expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 61 (expression -> expression IN expression .)
    OR              reduce using rule 61 (expression -> expression IN expression .)
    EQ              reduce using rule 61 (expression -> expression IN expression .)
    NE              reduce using rule 61 (expression -> expression IN expression .)
    IN              reduce using rule 61 (expression -> expression IN expression .)
    END             reduce using rule 61 (expression -> expression IN expression .)
    NEWLINE         reduce using rule 61 (expression -> expression IN expression .)
    THEN            reduce using rule 61 (expression -> expression IN expression .)
    ELSE            reduce using rule 61 (expression -> expression IN expression .)
    RIGHT_SB        reduce using rule 61 (expression -> expression IN expression .)
    COMMA           reduce using rule 61 (expression -> expression IN expression .)
    DO              reduce using rule 61 (expression -> expression IN expression .)
    RIGHT_PAR       reduce using rule 61 (expression -> expression IN expression .)
    RIGHT_CB        reduce using rule 61 (expression -> expression IN expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! ADD             [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! MIN             [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! DIV             [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! MUL             [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! POW             [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! DIV_INT         [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! LT              [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! LE              [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! GT              [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! GE              [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! DOT             [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! LSHIFT          [ reduce using rule 61 (expression -> expression IN expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! IN              [ shift and go to state 82 ]


state 125

    (55) expression -> expression EQ expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 55 (expression -> expression EQ expression .)
    OR              reduce using rule 55 (expression -> expression EQ expression .)
    EQ              reduce using rule 55 (expression -> expression EQ expression .)
    NE              reduce using rule 55 (expression -> expression EQ expression .)
    IN              reduce using rule 55 (expression -> expression EQ expression .)
    END             reduce using rule 55 (expression -> expression EQ expression .)
    NEWLINE         reduce using rule 55 (expression -> expression EQ expression .)
    THEN            reduce using rule 55 (expression -> expression EQ expression .)
    ELSE            reduce using rule 55 (expression -> expression EQ expression .)
    RIGHT_SB        reduce using rule 55 (expression -> expression EQ expression .)
    COMMA           reduce using rule 55 (expression -> expression EQ expression .)
    DO              reduce using rule 55 (expression -> expression EQ expression .)
    RIGHT_PAR       reduce using rule 55 (expression -> expression EQ expression .)
    RIGHT_CB        reduce using rule 55 (expression -> expression EQ expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! ADD             [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! MIN             [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! MUL             [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! POW             [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! DIV_INT         [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! DOT             [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! LSHIFT          [ reduce using rule 55 (expression -> expression EQ expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! IN              [ shift and go to state 82 ]


state 126

    (53) expression -> expression AND expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 53 (expression -> expression AND expression .)
    OR              reduce using rule 53 (expression -> expression AND expression .)
    END             reduce using rule 53 (expression -> expression AND expression .)
    NEWLINE         reduce using rule 53 (expression -> expression AND expression .)
    THEN            reduce using rule 53 (expression -> expression AND expression .)
    ELSE            reduce using rule 53 (expression -> expression AND expression .)
    RIGHT_SB        reduce using rule 53 (expression -> expression AND expression .)
    COMMA           reduce using rule 53 (expression -> expression AND expression .)
    DO              reduce using rule 53 (expression -> expression AND expression .)
    RIGHT_PAR       reduce using rule 53 (expression -> expression AND expression .)
    RIGHT_CB        reduce using rule 53 (expression -> expression AND expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! ADD             [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! MIN             [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! MUL             [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! POW             [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! DIV_INT         [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! LSHIFT          [ reduce using rule 53 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]


state 127

    (46) expression -> expression ADD expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    ADD             reduce using rule 46 (expression -> expression ADD expression .)
    MIN             reduce using rule 46 (expression -> expression ADD expression .)
    AND             reduce using rule 46 (expression -> expression ADD expression .)
    OR              reduce using rule 46 (expression -> expression ADD expression .)
    EQ              reduce using rule 46 (expression -> expression ADD expression .)
    NE              reduce using rule 46 (expression -> expression ADD expression .)
    LT              reduce using rule 46 (expression -> expression ADD expression .)
    LE              reduce using rule 46 (expression -> expression ADD expression .)
    GT              reduce using rule 46 (expression -> expression ADD expression .)
    GE              reduce using rule 46 (expression -> expression ADD expression .)
    IN              reduce using rule 46 (expression -> expression ADD expression .)
    LSHIFT          reduce using rule 46 (expression -> expression ADD expression .)
    END             reduce using rule 46 (expression -> expression ADD expression .)
    NEWLINE         reduce using rule 46 (expression -> expression ADD expression .)
    THEN            reduce using rule 46 (expression -> expression ADD expression .)
    ELSE            reduce using rule 46 (expression -> expression ADD expression .)
    RIGHT_SB        reduce using rule 46 (expression -> expression ADD expression .)
    COMMA           reduce using rule 46 (expression -> expression ADD expression .)
    DO              reduce using rule 46 (expression -> expression ADD expression .)
    RIGHT_PAR       reduce using rule 46 (expression -> expression ADD expression .)
    RIGHT_CB        reduce using rule 46 (expression -> expression ADD expression .)
    LEFT_PAR        shift and go to state 86
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    DOT             shift and go to state 74

  ! LEFT_PAR        [ reduce using rule 46 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 46 (expression -> expression ADD expression .) ]
  ! MUL             [ reduce using rule 46 (expression -> expression ADD expression .) ]
  ! POW             [ reduce using rule 46 (expression -> expression ADD expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression ADD expression .) ]
  ! DIV_INT         [ reduce using rule 46 (expression -> expression ADD expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> expression ADD expression .) ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 128

    (45) expression -> expression LEFT_PAR RIGHT_PAR .

    LEFT_PAR        reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    ADD             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    MIN             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    DIV             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    MUL             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    POW             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    MOD             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    DIV_INT         reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    AND             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    OR              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    EQ              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    NE              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    LT              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    LE              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    GT              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    GE              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    IN              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    DOT             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    LSHIFT          reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    END             reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    NEWLINE         reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    THEN            reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    ELSE            reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    RIGHT_SB        reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    COMMA           reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    DO              reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    RIGHT_PAR       reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)
    RIGHT_CB        reduce using rule 45 (expression -> expression LEFT_PAR RIGHT_PAR .)


state 129

    (44) expression -> expression LEFT_PAR expressions_suite . RIGHT_PAR
    (73) expressions_suite -> expressions_suite . COMMA expression

    RIGHT_PAR       shift and go to state 151
    COMMA           shift and go to state 89


state 130

    (54) expression -> expression OR expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    AND             reduce using rule 54 (expression -> expression OR expression .)
    OR              reduce using rule 54 (expression -> expression OR expression .)
    END             reduce using rule 54 (expression -> expression OR expression .)
    NEWLINE         reduce using rule 54 (expression -> expression OR expression .)
    THEN            reduce using rule 54 (expression -> expression OR expression .)
    ELSE            reduce using rule 54 (expression -> expression OR expression .)
    RIGHT_SB        reduce using rule 54 (expression -> expression OR expression .)
    COMMA           reduce using rule 54 (expression -> expression OR expression .)
    DO              reduce using rule 54 (expression -> expression OR expression .)
    RIGHT_PAR       reduce using rule 54 (expression -> expression OR expression .)
    RIGHT_CB        reduce using rule 54 (expression -> expression OR expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71

  ! LEFT_PAR        [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! ADD             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! MIN             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! MUL             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! POW             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! DIV_INT         [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! LSHIFT          [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]


state 131

    (51) expression -> expression MOD expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    ADD             reduce using rule 51 (expression -> expression MOD expression .)
    MIN             reduce using rule 51 (expression -> expression MOD expression .)
    DIV             reduce using rule 51 (expression -> expression MOD expression .)
    MUL             reduce using rule 51 (expression -> expression MOD expression .)
    POW             reduce using rule 51 (expression -> expression MOD expression .)
    MOD             reduce using rule 51 (expression -> expression MOD expression .)
    DIV_INT         reduce using rule 51 (expression -> expression MOD expression .)
    AND             reduce using rule 51 (expression -> expression MOD expression .)
    OR              reduce using rule 51 (expression -> expression MOD expression .)
    EQ              reduce using rule 51 (expression -> expression MOD expression .)
    NE              reduce using rule 51 (expression -> expression MOD expression .)
    LT              reduce using rule 51 (expression -> expression MOD expression .)
    LE              reduce using rule 51 (expression -> expression MOD expression .)
    GT              reduce using rule 51 (expression -> expression MOD expression .)
    GE              reduce using rule 51 (expression -> expression MOD expression .)
    IN              reduce using rule 51 (expression -> expression MOD expression .)
    LSHIFT          reduce using rule 51 (expression -> expression MOD expression .)
    END             reduce using rule 51 (expression -> expression MOD expression .)
    NEWLINE         reduce using rule 51 (expression -> expression MOD expression .)
    THEN            reduce using rule 51 (expression -> expression MOD expression .)
    ELSE            reduce using rule 51 (expression -> expression MOD expression .)
    RIGHT_SB        reduce using rule 51 (expression -> expression MOD expression .)
    COMMA           reduce using rule 51 (expression -> expression MOD expression .)
    DO              reduce using rule 51 (expression -> expression MOD expression .)
    RIGHT_PAR       reduce using rule 51 (expression -> expression MOD expression .)
    RIGHT_CB        reduce using rule 51 (expression -> expression MOD expression .)
    LEFT_PAR        shift and go to state 86
    DOT             shift and go to state 74

  ! LEFT_PAR        [ reduce using rule 51 (expression -> expression MOD expression .) ]
  ! DOT             [ reduce using rule 51 (expression -> expression MOD expression .) ]
  ! ADD             [ shift and go to state 85 ]
  ! MIN             [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 73 ]
  ! MUL             [ shift and go to state 72 ]
  ! POW             [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 88 ]
  ! DIV_INT         [ shift and go to state 75 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 87 ]
  ! EQ              [ shift and go to state 83 ]
  ! NE              [ shift and go to state 78 ]
  ! LT              [ shift and go to state 79 ]
  ! LE              [ shift and go to state 76 ]
  ! GT              [ shift and go to state 80 ]
  ! GE              [ shift and go to state 81 ]
  ! IN              [ shift and go to state 82 ]
  ! LSHIFT          [ shift and go to state 71 ]


state 132

    (73) expressions_suite -> expressions_suite COMMA expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    RIGHT_PAR       reduce using rule 73 (expressions_suite -> expressions_suite COMMA expression .)
    COMMA           reduce using rule 73 (expressions_suite -> expressions_suite COMMA expression .)
    RIGHT_SB        reduce using rule 73 (expressions_suite -> expressions_suite COMMA expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 133

    (28) iteration -> WHILE expression DO statement_libre . END

    END             shift and go to state 152


state 134

    (23) iteration -> WHILE expression DO NEWLINE . statements_suite END
    (27) iteration -> WHILE expression DO NEWLINE . statement_libre END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 154
    expression                     shift and go to state 38
    statement_libre                shift and go to state 153

state 135

    (29) iteration -> WHILE expression NEWLINE statement_libre . END
    (5) statement -> statement_libre . NEWLINE

    END             shift and go to state 155
    NEWLINE         shift and go to state 47


state 136

    (24) iteration -> WHILE expression NEWLINE statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 156
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 137

    (21) selection -> UNLESS expression THEN statement_libre . END
    (22) selection -> UNLESS expression THEN statement_libre . ELSE statement_libre END
    (5) statement -> statement_libre . NEWLINE

    END             shift and go to state 158
    ELSE            shift and go to state 157
    NEWLINE         shift and go to state 47


state 138

    (17) selection -> UNLESS expression THEN statements_suite . END
    (18) selection -> UNLESS expression THEN statements_suite . ELSE statements_suite END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 160
    ELSE            shift and go to state 159
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 139

    (84) definition -> DEF ID LEFT_PAR parameters . RIGHT_PAR statements_suite END
    (86) parameters -> parameters . COMMA parameter

    RIGHT_PAR       shift and go to state 162
    COMMA           shift and go to state 161


state 140

    (85) definition -> DEF ID LEFT_PAR RIGHT_PAR . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 163
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 141

    (87) parameters -> parameter .

    RIGHT_PAR       reduce using rule 87 (parameters -> parameter .)
    COMMA           reduce using rule 87 (parameters -> parameter .)


state 142

    (88) parameter -> ID . ID
    (89) parameter -> ID .

    ID              shift and go to state 164
    RIGHT_PAR       reduce using rule 89 (parameter -> ID .)
    COMMA           reduce using rule 89 (parameter -> ID .)


state 143

    (90) declaration -> CLASS ID LT ID . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 165
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 144

    (91) declaration -> CLASS ID statements_suite END .

    NEWLINE         reduce using rule 91 (declaration -> CLASS ID statements_suite END .)
    END             reduce using rule 91 (declaration -> CLASS ID statements_suite END .)
    ELSE            reduce using rule 91 (declaration -> CLASS ID statements_suite END .)


state 145

    (25) iteration -> FOR ID IN expression . DO statements_suite END
    (26) iteration -> FOR ID IN expression . NEWLINE statements_suite END
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    DO              shift and go to state 166
    NEWLINE         shift and go to state 167
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 146

    (83) modulation -> MODULE ID statements_suite END .

    NEWLINE         reduce using rule 83 (modulation -> MODULE ID statements_suite END .)
    END             reduce using rule 83 (modulation -> MODULE ID statements_suite END .)
    ELSE            reduce using rule 83 (modulation -> MODULE ID statements_suite END .)


state 147

    (70) expression_key -> ID KEY_OP expression .
    (44) expression -> expression . LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> expression . LEFT_PAR RIGHT_PAR
    (46) expression -> expression . ADD expression
    (47) expression -> expression . MIN expression
    (48) expression -> expression . DIV expression
    (49) expression -> expression . MUL expression
    (50) expression -> expression . POW expression
    (51) expression -> expression . MOD expression
    (52) expression -> expression . DIV_INT expression
    (53) expression -> expression . AND expression
    (54) expression -> expression . OR expression
    (55) expression -> expression . EQ expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . LT expression
    (58) expression -> expression . LE expression
    (59) expression -> expression . GT expression
    (60) expression -> expression . GE expression
    (61) expression -> expression . IN expression
    (62) expression -> expression . DOT expression
    (63) expression -> expression . LSHIFT expression

    RIGHT_CB        reduce using rule 70 (expression_key -> ID KEY_OP expression .)
    COMMA           reduce using rule 70 (expression_key -> ID KEY_OP expression .)
    LEFT_PAR        shift and go to state 86
    ADD             shift and go to state 85
    MIN             shift and go to state 70
    DIV             shift and go to state 73
    MUL             shift and go to state 72
    POW             shift and go to state 77
    MOD             shift and go to state 88
    DIV_INT         shift and go to state 75
    AND             shift and go to state 84
    OR              shift and go to state 87
    EQ              shift and go to state 83
    NE              shift and go to state 78
    LT              shift and go to state 79
    LE              shift and go to state 76
    GT              shift and go to state 80
    GE              shift and go to state 81
    IN              shift and go to state 82
    DOT             shift and go to state 74
    LSHIFT          shift and go to state 71


state 148

    (68) expressions_key_suite -> expressions_key_suite COMMA expression_key .

    RIGHT_CB        reduce using rule 68 (expressions_key_suite -> expressions_key_suite COMMA expression_key .)
    COMMA           reduce using rule 68 (expressions_key_suite -> expressions_key_suite COMMA expression_key .)


state 149

    (19) selection -> IF expression THEN statement_libre . END
    (20) selection -> IF expression THEN statement_libre . ELSE statement_libre END
    (5) statement -> statement_libre . NEWLINE

    END             shift and go to state 168
    ELSE            shift and go to state 169
    NEWLINE         shift and go to state 47


state 150

    (15) selection -> IF expression THEN statements_suite . END
    (16) selection -> IF expression THEN statements_suite . ELSE statements_suite END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 170
    ELSE            shift and go to state 171
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 151

    (44) expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .

    LEFT_PAR        reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    ADD             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    MIN             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    DIV             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    MUL             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    POW             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    MOD             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    DIV_INT         reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    AND             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    OR              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    EQ              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    NE              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    LT              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    LE              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    GT              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    GE              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    IN              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    DOT             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    LSHIFT          reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    END             reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    NEWLINE         reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    THEN            reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    ELSE            reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    RIGHT_SB        reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    COMMA           reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    DO              reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    RIGHT_PAR       reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)
    RIGHT_CB        reduce using rule 44 (expression -> expression LEFT_PAR expressions_suite RIGHT_PAR .)


state 152

    (28) iteration -> WHILE expression DO statement_libre END .

    NEWLINE         reduce using rule 28 (iteration -> WHILE expression DO statement_libre END .)
    END             reduce using rule 28 (iteration -> WHILE expression DO statement_libre END .)
    ELSE            reduce using rule 28 (iteration -> WHILE expression DO statement_libre END .)


state 153

    (27) iteration -> WHILE expression DO NEWLINE statement_libre . END
    (5) statement -> statement_libre . NEWLINE

    END             shift and go to state 172
    NEWLINE         shift and go to state 47


state 154

    (23) iteration -> WHILE expression DO NEWLINE statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 173
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 155

    (29) iteration -> WHILE expression NEWLINE statement_libre END .

    NEWLINE         reduce using rule 29 (iteration -> WHILE expression NEWLINE statement_libre END .)
    END             reduce using rule 29 (iteration -> WHILE expression NEWLINE statement_libre END .)
    ELSE            reduce using rule 29 (iteration -> WHILE expression NEWLINE statement_libre END .)


state 156

    (24) iteration -> WHILE expression NEWLINE statements_suite END .

    NEWLINE         reduce using rule 24 (iteration -> WHILE expression NEWLINE statements_suite END .)
    END             reduce using rule 24 (iteration -> WHILE expression NEWLINE statements_suite END .)
    ELSE            reduce using rule 24 (iteration -> WHILE expression NEWLINE statements_suite END .)


state 157

    (22) selection -> UNLESS expression THEN statement_libre ELSE . statement_libre END
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 174

state 158

    (21) selection -> UNLESS expression THEN statement_libre END .

    END             reduce using rule 21 (selection -> UNLESS expression THEN statement_libre END .)
    NEWLINE         reduce using rule 21 (selection -> UNLESS expression THEN statement_libre END .)
    ELSE            reduce using rule 21 (selection -> UNLESS expression THEN statement_libre END .)


state 159

    (18) selection -> UNLESS expression THEN statements_suite ELSE . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 175
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 160

    (17) selection -> UNLESS expression THEN statements_suite END .

    END             reduce using rule 17 (selection -> UNLESS expression THEN statements_suite END .)
    NEWLINE         reduce using rule 17 (selection -> UNLESS expression THEN statements_suite END .)
    ELSE            reduce using rule 17 (selection -> UNLESS expression THEN statements_suite END .)


state 161

    (86) parameters -> parameters COMMA . parameter
    (88) parameter -> . ID ID
    (89) parameter -> . ID

    ID              shift and go to state 142

    parameter                      shift and go to state 176

state 162

    (84) definition -> DEF ID LEFT_PAR parameters RIGHT_PAR . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 177
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 163

    (85) definition -> DEF ID LEFT_PAR RIGHT_PAR statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 178
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 164

    (88) parameter -> ID ID .

    RIGHT_PAR       reduce using rule 88 (parameter -> ID ID .)
    COMMA           reduce using rule 88 (parameter -> ID ID .)


state 165

    (90) declaration -> CLASS ID LT ID statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 179
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 166

    (25) iteration -> FOR ID IN expression DO . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 180
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 167

    (26) iteration -> FOR ID IN expression NEWLINE . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 181
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 168

    (19) selection -> IF expression THEN statement_libre END .

    END             reduce using rule 19 (selection -> IF expression THEN statement_libre END .)
    NEWLINE         reduce using rule 19 (selection -> IF expression THEN statement_libre END .)
    ELSE            reduce using rule 19 (selection -> IF expression THEN statement_libre END .)


state 169

    (20) selection -> IF expression THEN statement_libre ELSE . statement_libre END
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 182

state 170

    (15) selection -> IF expression THEN statements_suite END .

    END             reduce using rule 15 (selection -> IF expression THEN statements_suite END .)
    NEWLINE         reduce using rule 15 (selection -> IF expression THEN statements_suite END .)
    ELSE            reduce using rule 15 (selection -> IF expression THEN statements_suite END .)


state 171

    (16) selection -> IF expression THEN statements_suite ELSE . statements_suite END
    (2) statements_suite -> . statements_suite statement
    (3) statements_suite -> . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 15
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    statements_suite               shift and go to state 183
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 172

    (27) iteration -> WHILE expression DO NEWLINE statement_libre END .

    NEWLINE         reduce using rule 27 (iteration -> WHILE expression DO NEWLINE statement_libre END .)
    END             reduce using rule 27 (iteration -> WHILE expression DO NEWLINE statement_libre END .)
    ELSE            reduce using rule 27 (iteration -> WHILE expression DO NEWLINE statement_libre END .)


state 173

    (23) iteration -> WHILE expression DO NEWLINE statements_suite END .

    NEWLINE         reduce using rule 23 (iteration -> WHILE expression DO NEWLINE statements_suite END .)
    END             reduce using rule 23 (iteration -> WHILE expression DO NEWLINE statements_suite END .)
    ELSE            reduce using rule 23 (iteration -> WHILE expression DO NEWLINE statements_suite END .)


state 174

    (22) selection -> UNLESS expression THEN statement_libre ELSE statement_libre . END

    END             shift and go to state 184


state 175

    (18) selection -> UNLESS expression THEN statements_suite ELSE statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 185
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 176

    (86) parameters -> parameters COMMA parameter .

    RIGHT_PAR       reduce using rule 86 (parameters -> parameters COMMA parameter .)
    COMMA           reduce using rule 86 (parameters -> parameters COMMA parameter .)


state 177

    (84) definition -> DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 186
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 178

    (85) definition -> DEF ID LEFT_PAR RIGHT_PAR statements_suite END .

    NEWLINE         reduce using rule 85 (definition -> DEF ID LEFT_PAR RIGHT_PAR statements_suite END .)
    END             reduce using rule 85 (definition -> DEF ID LEFT_PAR RIGHT_PAR statements_suite END .)
    ELSE            reduce using rule 85 (definition -> DEF ID LEFT_PAR RIGHT_PAR statements_suite END .)


state 179

    (90) declaration -> CLASS ID LT ID statements_suite END .

    NEWLINE         reduce using rule 90 (declaration -> CLASS ID LT ID statements_suite END .)
    END             reduce using rule 90 (declaration -> CLASS ID LT ID statements_suite END .)
    ELSE            reduce using rule 90 (declaration -> CLASS ID LT ID statements_suite END .)


state 180

    (25) iteration -> FOR ID IN expression DO statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 187
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 181

    (26) iteration -> FOR ID IN expression NEWLINE statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 188
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 182

    (20) selection -> IF expression THEN statement_libre ELSE statement_libre . END

    END             shift and go to state 189


state 183

    (16) selection -> IF expression THEN statements_suite ELSE statements_suite . END
    (2) statements_suite -> statements_suite . statement
    (4) statement -> . NEWLINE
    (5) statement -> . statement_libre NEWLINE
    (6) statement_libre -> . selection
    (7) statement_libre -> . iteration
    (8) statement_libre -> . flux
    (9) statement_libre -> . interfiles
    (10) statement_libre -> . expression
    (11) statement_libre -> . affectation
    (12) statement_libre -> . modulation
    (13) statement_libre -> . definition
    (14) statement_libre -> . declaration
    (15) selection -> . IF expression THEN statements_suite END
    (16) selection -> . IF expression THEN statements_suite ELSE statements_suite END
    (17) selection -> . UNLESS expression THEN statements_suite END
    (18) selection -> . UNLESS expression THEN statements_suite ELSE statements_suite END
    (19) selection -> . IF expression THEN statement_libre END
    (20) selection -> . IF expression THEN statement_libre ELSE statement_libre END
    (21) selection -> . UNLESS expression THEN statement_libre END
    (22) selection -> . UNLESS expression THEN statement_libre ELSE statement_libre END
    (23) iteration -> . WHILE expression DO NEWLINE statements_suite END
    (24) iteration -> . WHILE expression NEWLINE statements_suite END
    (25) iteration -> . FOR ID IN expression DO statements_suite END
    (26) iteration -> . FOR ID IN expression NEWLINE statements_suite END
    (27) iteration -> . WHILE expression DO NEWLINE statement_libre END
    (28) iteration -> . WHILE expression DO statement_libre END
    (29) iteration -> . WHILE expression NEWLINE statement_libre END
    (30) flux -> . BREAK
    (31) flux -> . NEXT
    (32) flux -> . RETURN expression
    (33) flux -> . RETURN
    (34) interfiles -> . REQUIRE STRING
    (35) interfiles -> . INCLUDE ID
    (44) expression -> . expression LEFT_PAR expressions_suite RIGHT_PAR
    (45) expression -> . expression LEFT_PAR RIGHT_PAR
    (46) expression -> . expression ADD expression
    (47) expression -> . expression MIN expression
    (48) expression -> . expression DIV expression
    (49) expression -> . expression MUL expression
    (50) expression -> . expression POW expression
    (51) expression -> . expression MOD expression
    (52) expression -> . expression DIV_INT expression
    (53) expression -> . expression AND expression
    (54) expression -> . expression OR expression
    (55) expression -> . expression EQ expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression LT expression
    (58) expression -> . expression LE expression
    (59) expression -> . expression GT expression
    (60) expression -> . expression GE expression
    (61) expression -> . expression IN expression
    (62) expression -> . expression DOT expression
    (63) expression -> . expression LSHIFT expression
    (64) expression -> . MIN expression
    (65) expression -> . NOT expression
    (66) expression -> . LEFT_CB expressions_key_suite RIGHT_CB
    (67) expression -> . LEFT_CB RIGHT_CB
    (71) expression -> . LEFT_SB expressions_suite RIGHT_SB
    (72) expression -> . LEFT_SB RIGHT_SB
    (75) expression -> . LEFT_PAR expression RIGHT_PAR
    (76) expression -> . INT
    (77) expression -> . ID
    (78) expression -> . FLOAT
    (79) expression -> . TRUE
    (80) expression -> . FALSE
    (81) expression -> . NIL
    (82) expression -> . STRING
    (36) affectation -> . ID AFFECT expression
    (37) affectation -> . ID ADD_AFF expression
    (38) affectation -> . ID MIN_AFF expression
    (39) affectation -> . ID MUL_AFF expression
    (40) affectation -> . ID DIV_AFF expression
    (41) affectation -> . ID DIV_INT_AFF expression
    (42) affectation -> . ID MOD_AFF expression
    (43) affectation -> . ID POW_AFF expression
    (83) modulation -> . MODULE ID statements_suite END
    (84) definition -> . DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END
    (85) definition -> . DEF ID LEFT_PAR RIGHT_PAR statements_suite END
    (90) declaration -> . CLASS ID LT ID statements_suite END
    (91) declaration -> . CLASS ID statements_suite END

    END             shift and go to state 190
    NEWLINE         shift and go to state 11
    IF              shift and go to state 26
    UNLESS          shift and go to state 7
    WHILE           shift and go to state 5
    FOR             shift and go to state 19
    BREAK           shift and go to state 33
    NEXT            shift and go to state 12
    RETURN          shift and go to state 2
    REQUIRE         shift and go to state 3
    INCLUDE         shift and go to state 23
    MIN             shift and go to state 30
    NOT             shift and go to state 36
    LEFT_CB         shift and go to state 25
    LEFT_SB         shift and go to state 4
    LEFT_PAR        shift and go to state 35
    INT             shift and go to state 16
    ID              shift and go to state 24
    FLOAT           shift and go to state 32
    TRUE            shift and go to state 8
    FALSE           shift and go to state 28
    NIL             shift and go to state 29
    STRING          shift and go to state 18
    MODULE          shift and go to state 21
    DEF             shift and go to state 14
    CLASS           shift and go to state 17

    definition                     shift and go to state 27
    selection                      shift and go to state 1
    interfiles                     shift and go to state 10
    modulation                     shift and go to state 20
    iteration                      shift and go to state 31
    flux                           shift and go to state 34
    statement                      shift and go to state 69
    declaration                    shift and go to state 22
    affectation                    shift and go to state 6
    expression                     shift and go to state 38
    statement_libre                shift and go to state 9

state 184

    (22) selection -> UNLESS expression THEN statement_libre ELSE statement_libre END .

    END             reduce using rule 22 (selection -> UNLESS expression THEN statement_libre ELSE statement_libre END .)
    NEWLINE         reduce using rule 22 (selection -> UNLESS expression THEN statement_libre ELSE statement_libre END .)
    ELSE            reduce using rule 22 (selection -> UNLESS expression THEN statement_libre ELSE statement_libre END .)


state 185

    (18) selection -> UNLESS expression THEN statements_suite ELSE statements_suite END .

    END             reduce using rule 18 (selection -> UNLESS expression THEN statements_suite ELSE statements_suite END .)
    NEWLINE         reduce using rule 18 (selection -> UNLESS expression THEN statements_suite ELSE statements_suite END .)
    ELSE            reduce using rule 18 (selection -> UNLESS expression THEN statements_suite ELSE statements_suite END .)


state 186

    (84) definition -> DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END .

    NEWLINE         reduce using rule 84 (definition -> DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END .)
    END             reduce using rule 84 (definition -> DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END .)
    ELSE            reduce using rule 84 (definition -> DEF ID LEFT_PAR parameters RIGHT_PAR statements_suite END .)


state 187

    (25) iteration -> FOR ID IN expression DO statements_suite END .

    NEWLINE         reduce using rule 25 (iteration -> FOR ID IN expression DO statements_suite END .)
    END             reduce using rule 25 (iteration -> FOR ID IN expression DO statements_suite END .)
    ELSE            reduce using rule 25 (iteration -> FOR ID IN expression DO statements_suite END .)


state 188

    (26) iteration -> FOR ID IN expression NEWLINE statements_suite END .

    NEWLINE         reduce using rule 26 (iteration -> FOR ID IN expression NEWLINE statements_suite END .)
    END             reduce using rule 26 (iteration -> FOR ID IN expression NEWLINE statements_suite END .)
    ELSE            reduce using rule 26 (iteration -> FOR ID IN expression NEWLINE statements_suite END .)


state 189

    (20) selection -> IF expression THEN statement_libre ELSE statement_libre END .

    END             reduce using rule 20 (selection -> IF expression THEN statement_libre ELSE statement_libre END .)
    NEWLINE         reduce using rule 20 (selection -> IF expression THEN statement_libre ELSE statement_libre END .)
    ELSE            reduce using rule 20 (selection -> IF expression THEN statement_libre ELSE statement_libre END .)


state 190

    (16) selection -> IF expression THEN statements_suite ELSE statements_suite END .

    END             reduce using rule 16 (selection -> IF expression THEN statements_suite ELSE statements_suite END .)
    NEWLINE         reduce using rule 16 (selection -> IF expression THEN statements_suite ELSE statements_suite END .)
    ELSE            reduce using rule 16 (selection -> IF expression THEN statements_suite ELSE statements_suite END .)

